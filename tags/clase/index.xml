<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Clase on Antonio Moon´s</title>
    <link>https://moonantonio.github.io/tags/clase/</link>
    <description>Recent content in Clase on Antonio Moon´s</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-es</language>
    <lastBuildDate>Mon, 24 Apr 2017 12:52:34 +0200</lastBuildDate>
    
	<atom:link href="https://moonantonio.github.io/tags/clase/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>NavMesh Unity3D</title>
      <link>https://moonantonio.github.io/post/2017/clase/007/</link>
      <pubDate>Mon, 24 Apr 2017 12:52:34 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/clase/007/</guid>
      <description>Al final del proceso de implementación de la escena, bakear los elementos que se quieran navegar.
Abrir el inspector Navigation.
Entre las 4 pestañas, usar la de objects para seleccionar todos los objetos navegables.
Bake para bakear la escena.
Áreas para seleccionar el coste de ese terreno, por ejemplo si una area tiene un coste de 1 y otra area con menor distancia hasta el punto n, el NPC ira por el de coste menor ya que llegara mas rápido.</description>
    </item>
    
    <item>
      <title>Bakeo simple en Unity3d</title>
      <link>https://moonantonio.github.io/post/2017/clase/006/</link>
      <pubDate>Thu, 09 Mar 2017 22:24:10 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/clase/006/</guid>
      <description>Bakeo simple en Unity3d 
Primero preparamos la escena, con colores planos (simples) y algún objeto para representar en la escena, como una esfera.

Luego configuramos la iluminación para el quemado. Lo mas importante seria el echo de quitar el bakeo y seleccionar en tiempo real para preparar la escena entera.

Añadimos una pequeña animación para el movimiento de la luz direccional para ver en tiempo real el movimiento y si esta bien configurado.</description>
    </item>
    
    <item>
      <title>Primera reunión sobre el TFG</title>
      <link>https://moonantonio.github.io/post/2017/clase/005/</link>
      <pubDate>Thu, 09 Mar 2017 22:08:02 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/clase/005/</guid>
      <description>Ambiente Algunos puntos a destacar sobre el ambiente:
 Realidad aumentada. Arboles holografiados Muscan  
 Neonizada Wadim  
 Muy vivoBravo  
 Realismo Touho  
 Variación de profundidad Touho  
Datos técnicos  Edificios:
 LOD desde 2 planta hacia arriba.
3 Tipos de LOD.
3 tipos generales y props para modular.
   Circulación:
 Coches solo vuelan por arriba.</description>
    </item>
    
    <item>
      <title>Clase de sistemas de partículas - Unity3D</title>
      <link>https://moonantonio.github.io/post/2017/clase/004/</link>
      <pubDate>Thu, 09 Mar 2017 22:01:36 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/clase/004/</guid>
      <description>Clase de sistemas de partículas - Unity3D 
Los parámetros mas usados son, Base, emisión y renderer.
 Parámetros Base
 Duración: La vida que tendrá todas las partículas.
Looping: Crea un loop por el cual crea un loop de las partículas.
Prewarm: Aparecen todas las partículas directamente (No se inician poco a poco).
Start Delay: El tiempo que tardan en empezar.
Start Lifetime: El tiempo desde que sale hasta que desaparece.</description>
    </item>
    
    <item>
      <title>Agentes de Búsqueda y demás.</title>
      <link>https://moonantonio.github.io/post/2017/clase/003/</link>
      <pubDate>Mon, 06 Mar 2017 12:36:44 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/clase/003/</guid>
      <description>Agentes Los agentes de búsqueda, son agentes que tienen un objetivo, seguirán haciendo su función hasta terminar su búsqueda.
Identifica una solución adecuada dentro del árbol de búsqueda.
Primero se formula el objetivo y luego se formula el problema.
 Formulación del problema:   Estado inicial: El estado inicial del agente.
Estados: Todos los posibles estados a los que el agente puede evolucionar a través de una secuencia.</description>
    </item>
    
    <item>
      <title>Mecánicas TFG - Investigación</title>
      <link>https://moonantonio.github.io/post/2017/clase/002/</link>
      <pubDate>Sun, 05 Mar 2017 23:39:48 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/clase/002/</guid>
      <description>Mecánicas presentadas para el TFG Al comienzo de la investigación, se propuso unas mecánicas Hack &amp;amp; Slash estilo Devil May Cry, en base a ellas, vimos varias propuestas y redactamos lo que serian los cimientos de las mecánicas &amp;amp; algunas funcionalidades previstas:
  Accionar y combinar combos, entre 4 estilos de lucha:    Ataque fuerte. Ataque rápido. Ataque a distancia. Salto / Salto doble.   También tiene extras como:</description>
    </item>
    
  </channel>
</rss>