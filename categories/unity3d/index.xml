<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Unity3d on Antonio Moon´s</title>
    <link>https://moonantonio.github.io/categories/unity3d/</link>
    <description>Recent content in Unity3d on Antonio Moon´s</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-es</language>
    <lastBuildDate>Tue, 05 Feb 2019 14:38:50 +0100</lastBuildDate>
    
	<atom:link href="https://moonantonio.github.io/categories/unity3d/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Shaders (Ley de Lambert) y Cell Shading (Toon)</title>
      <link>https://moonantonio.github.io/post/2019/dev/002/</link>
      <pubDate>Tue, 05 Feb 2019 14:38:50 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2019/dev/002/</guid>
      <description>En post anteriores exploramos cómo podemos cambiar las propiedades físicas para simular diferentes materiales utilizando Surface Shaders. Un modelo de iluminación es responsable de tomar estas propiedades y calcular el tono final de cada píxel.
Comenzaremos con uno realmente simple sobre el que podemos construir, un modelo de iluminación de Lambert. Para ello, debemos saber que es la ley de Lambert.
Ley de Lambert
 La ley de Lambert trata sobre la iluminancia de una superficie situada a una cierta distancia de una fuente de luz.</description>
    </item>
    
    <item>
      <title>WebClient gestor de conexiones Unity3D</title>
      <link>https://moonantonio.github.io/post/2018/dev/007/</link>
      <pubDate>Fri, 06 Jul 2018 23:46:32 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/dev/007/</guid>
      <description>WebClient es un componente del lado del cliente, un modelo distribuido de aplicaciones de niveles múltiples utilizado para crear y desarrollar aplicaciones empresariales. Los componentes del lado del cliente son típicamente aplicaciones de computadora que se ejecutan en la computadora de un usuario y se conectan a un servidor. Estos componentes realizan operaciones en el lado del cliente, ya que pueden necesitar acceso a la información disponible solo en el lado del cliente, como la entrada del usuario, o porque el servidor carece de la potencia de procesamiento necesaria en tales operaciones.</description>
    </item>
    
    <item>
      <title>Unity3D Plugins ¿Que son?</title>
      <link>https://moonantonio.github.io/post/2018/dev/003/</link>
      <pubDate>Sat, 26 May 2018 00:57:20 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/dev/003/</guid>
      <description>Hoy decidi compartir, algo que creo que no es un &amp;ldquo;conocimiento común&amp;rdquo; y no hay muchos recursos sobre ese tema en Internet, despues de que varios colegas que estan empezando en este mundo, me preguntasen como poder usar APIs en otros lenguajes en Unity3D, como por ejemplo el SKD de Steam que esta en C++ o las librerias .JAR de Android decidi crear una entrada nueva. Mostrare como crear bibliotecas simples de C/C++ para Unity3D.</description>
    </item>
    
    <item>
      <title>Efectos de camara</title>
      <link>https://moonantonio.github.io/post/2017/diario/009/</link>
      <pubDate>Sat, 06 May 2017 03:19:13 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/diario/009/</guid>
      <description>Antes de nada, es precisa una customizacion rapida ya que Pros Proccesing Stack no esta integrado aun de forma natica en Unity.
Primero en la camara, activar HDR y desactivar MSA, por otro lado tambien poner defered para aumentar el realismo de la iluminacion.
Por ultimo en los ajustes de graficos, quitar el anti-aliasing que viene por defecto de unity.
Anti-Aliased Es un proceso de reduccion de los bordes dentados , con la que se añade una interpolacion para tratar de suavizar los bordes y dejarlos mas lisos.</description>
    </item>
    
    <item>
      <title>Iluminacion con Unity 5</title>
      <link>https://moonantonio.github.io/post/2017/utiles/004/</link>
      <pubDate>Sat, 18 Mar 2017 18:59:13 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/utiles/004/</guid>
      <description>Jeryce Dianingana compartió sus pensamientos sobre la construcción de escenas realistas mejoradas en Unity 5.

Poner a prueba la iluminación de Unity Siempre he querido reproducir una iluminación real desde un entorno real, así que probé en un primer momento para tomar la foto real en mi ciudad, apartamento, pero no soy una buena fotografa, así que fui a Pinterest, Me encanta este sitio web, es uno de los mejores para mí para encontrar la referencia.</description>
    </item>
    
    <item>
      <title>Gestor de Escenas</title>
      <link>https://moonantonio.github.io/post/2017/programacion/005/</link>
      <pubDate>Wed, 15 Mar 2017 13:02:10 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/programacion/005/</guid>
      <description>Despues de evaluar lo necesario para el TFG, vi que requeriamos de un gestor de escenas, en la que se pudiera cambair de escena, desde el editor y en runtime con variaciones.
 Editor -&amp;gt; cambiar generalmente de forma rapida y precisa. Runtime -&amp;gt; cambiar entre cargar escena copleta y cargar mediante Sync.
 Por ello propuse un Gestor de Escenas en la que uno mismo podria cambiar siempre de escena en cualquier lado.</description>
    </item>
    
  </channel>
</rss>