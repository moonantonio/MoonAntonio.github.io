<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on Antonio Moon´s</title>
    <link>https://moonantonio.github.io/post/</link>
    <description>Recent content in Posts on Antonio Moon´s</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>es-es</language>
    <lastBuildDate>Sat, 16 Jul 2022 22:39:45 +0200</lastBuildDate>
    
	<atom:link href="https://moonantonio.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Actualización del blog - Temporal</title>
      <link>https://moonantonio.github.io/post/2022/comun/001/</link>
      <pubDate>Sat, 16 Jul 2022 22:39:45 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2022/comun/001/</guid>
      <description>Hola, actualmente el blog esta un poco parado. No por no tener artículos que publicar, sino por la pereza de lo que tarda en generarse todo.
Cuando inicie el blog, elegí Hugo como framework para crear sitios webs estáticos lo mas rápido posible y realmente era bestialmente rápido. El problema viene después de tantos años &amp;hellip; es desesperadamente lento, en eso del 2017 se generaba en 20s - 30s, a dia de hoy es normal que tarde 2 o 3 minutos tranquilamente.</description>
    </item>
    
    <item>
      <title>VSCodeThemes, directorio de temas para Visual Studio Code</title>
      <link>https://moonantonio.github.io/post/2019/comun/008/</link>
      <pubDate>Wed, 27 Nov 2019 00:15:44 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2019/comun/008/</guid>
      <description>El marketplace de Visual Studio Code realmente no es práctico para encontrar lo que necesitamos, en conceptos de diferentes temas que la comunidad nos brinda. ¡Visita el sitio web VSCodeThemes, que hace que sea mucho más fácil elegir un tema para Visual Studio Code!
Asumiendo que el mercado de Visual Studio Code no es la mejor manera de encontrar temas (mientras que para las extensiones, está bien) porque es necesario rezar para que el creador del tema haya capturado la pantalla en el archivo README de su proyecto para echar un vistazo, Jordan Schroter ha desarrollado un sitio web llamado VSCodeThemes , congrega temas de VSCode muy agradables y mucho más prácticos.</description>
    </item>
    
    <item>
      <title>Guía de inicio en la Programación</title>
      <link>https://moonantonio.github.io/post/2019/comun/007/</link>
      <pubDate>Wed, 30 Oct 2019 03:16:52 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2019/comun/007/</guid>
      <description>¿No sabes por dónde empezar? Si estás iniciando tu camino en la programación, o es la primera vez que visitas la página, no te preocupes, porque esta guía te mostrará los contenidos de forma ordenada.

La intención de esta guía de introducción a la programación es ayudarte a escoger por dónde empezar y qué camino seguir en el desarrollo en general.
Si aprendes a programar adecuadamente, podrás desarrollar aplicaciones móviles, sistemas web, videojuegos, y cualquier tipo de software en general, usando distintas tecnologías.</description>
    </item>
    
    <item>
      <title>Cómo usar Trello para el desarrollo ágil</title>
      <link>https://moonantonio.github.io/post/2019/comun/006/</link>
      <pubDate>Wed, 30 Oct 2019 02:53:06 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2019/comun/006/</guid>
      <description>Trello como una herramienta de apoyo para el desarrollo ágil. Específicamente, vamos a aplicar varios de los conceptos de Scrum, aunque no seguiremos todo lo descrito por esta metodología al pie de la letra.
Lo básico En Trello existen 3 componentes básicos:
 Tableros Listas Tarjetas  Un tablero de Trello se corresponde con un proyecto. Dentro de cada tablero podemos crear tantas listas como sea necesario. Por último, cada lista contendrá una serie de tarjetas.</description>
    </item>
    
    <item>
      <title>Álgebra - Matrices</title>
      <link>https://moonantonio.github.io/post/2019/matematicas/003/</link>
      <pubDate>Thu, 03 Oct 2019 02:57:43 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2019/matematicas/003/</guid>
      <description>A partir de la definición de multiplicación matricial, sabemos que:

Esencialmente, el elemento (i,j) del producto matriz AB es el producto punto. De la fila i, el A y desde la fila j el B.
Podemos calcular la multiplicación de matrices realizando un producto de puntos por elemento en el producto de matriz resultante AB. Sin embargo, hay dos formas alternativas de ver la operación de multiplicación de matrices que a veces pueden facilitar la vida.</description>
    </item>
    
    <item>
      <title>Cuaternión Básicos</title>
      <link>https://moonantonio.github.io/post/2019/matematicas/002/</link>
      <pubDate>Wed, 04 Sep 2019 03:26:08 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2019/matematicas/002/</guid>
      <description>Un cuaternión es un objeto matemático muy útil ideado por Sir William Rowan Hamilton como una extensión de números complejos . A menudo se usa para representar de forma compacta las orientaciones 3D con solo cuatro números de punto flotante, en lugar de usar una matriz de 3 por 3 que contiene nueve números de punto flotante, y tiene otras buenas propiedades de las que hablaré más adelante.
Como su nombre lo indica, un cuaternión se compone de cuatro componentes, uno en la parte real y los otros tres en la parte imaginaria .</description>
    </item>
    
    <item>
      <title>Vector Cruzado - 2D</title>
      <link>https://moonantonio.github.io/post/2019/matematicas/001/</link>
      <pubDate>Mon, 02 Sep 2019 19:34:19 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2019/matematicas/001/</guid>
      <description>El producto cruzado de dos vectores 3D es un vector 3D, que está en la dirección del eje de rotación para rotar el primer vector para que coincida con la dirección del segundo vector, con el ángulo de rotación más pequeño (siempre menor de 180 grados ). Entonces, ¿qué significa &amp;ldquo;producto cruzado&amp;rdquo; de vectores 2D?
Me gusta pensar en el &amp;ldquo;producto cruzado&amp;rdquo; de dos vectores 2D como una escala, no un vector.</description>
    </item>
    
    <item>
      <title>Uso de GUISkin para el estilo del editor</title>
      <link>https://moonantonio.github.io/post/2019/dev/004/</link>
      <pubDate>Fri, 03 May 2019 02:02:45 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2019/dev/004/</guid>
      <description>Al crear ventanas del editor de Unity con barras de herramientas, es posible que haya visto un par de formas diferentes de trabajar con los estilos de la barra de herramientas. Muchos de los ejemplos online o en paquetes de tiendas de activos crean estilos en código que ciertamente funcionan. Sin embargo, no he visto muchos ejemplos usando GUISkin para crear una GUI en el editor, así que pensé en compartir lo que aprendí experimentando con este método.</description>
    </item>
    
    <item>
      <title>Conferencia NIS 2019</title>
      <link>https://moonantonio.github.io/post/2019/news/001/</link>
      <pubDate>Tue, 12 Mar 2019 19:39:41 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2019/news/001/</guid>
      <description>La distribuidora occidental de Nippon Ichi, NIS, se ha convertido en una de las más importantes para los títulos desarrollados en Japón, ya que ha expandido su radio a multitud de compañías que anteriormente contaban con XSeed o Atlus en esa faceta.
Con FuRyu o Nihon Falcom en su actual cartera y sus títulos de producción propia, NIS ha preparado una conferencia de prensa con la que anunciar cuáles van a ser los títulos que van a localizar en nuestras regiones durante este periodo, por lo que evidentemente cabía esperar muchos RPGs en esa lista y alguna que otra sorpresa.</description>
    </item>
    
    <item>
      <title>Fases Importantes del desarrollo de un juego</title>
      <link>https://moonantonio.github.io/post/2019/dev/003/</link>
      <pubDate>Mon, 25 Feb 2019 23:17:23 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2019/dev/003/</guid>
      <description>Quiero analizar las diferentes etapas que componen la realización de un videojuego profesional. Si estás metido en el mundo del software entonces este proceso te resultará familiar debido a que es muy similar, exceptuando que los videojuegos requieren de grandes aportes creativos.
Fase de Concepción Todo comienza con una idea a partir de la cual se conformarán los aspectos fundamentales. Se determina el género o géneros del videojuego, cómo será el proceso de juego (gameplay), y también se constituye un guión gráfico (storyboard) en el que se tratan todo tipo de ideas preconcebidas que pueden ir adaptándose, como por ejemplo el estilo de los personajes, el ambiente, la música, etc.</description>
    </item>
    
    <item>
      <title>Reflexión sobre Final Fantasy</title>
      <link>https://moonantonio.github.io/post/2019/comun/004/</link>
      <pubDate>Wed, 06 Feb 2019 02:19:22 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2019/comun/004/</guid>
      <description>Durante la mayor parte de mi vida, nunca pensé seriamente en la serie Final Fantasy , a pesar de los cientos de horas que literalmente he pasado jugando. Siempre tuve dos suposiciones fundamentales con respecto a los personajes femeninos de la serie. En primer lugar, pueden luchar tan bien como los personajes masculinos. En segundo lugar, aunque son muy, muy bonitos, también lo son los personajes masculinos. Como dice en la caja, esto es fantasía.</description>
    </item>
    
    <item>
      <title>Shaders (Ley de Lambert) y Cell Shading (Toon)</title>
      <link>https://moonantonio.github.io/post/2019/dev/002/</link>
      <pubDate>Tue, 05 Feb 2019 14:38:50 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2019/dev/002/</guid>
      <description>En post anteriores exploramos cómo podemos cambiar las propiedades físicas para simular diferentes materiales utilizando Surface Shaders. Un modelo de iluminación es responsable de tomar estas propiedades y calcular el tono final de cada píxel.
Comenzaremos con uno realmente simple sobre el que podemos construir, un modelo de iluminación de Lambert. Para ello, debemos saber que es la ley de Lambert.
Ley de Lambert
 La ley de Lambert trata sobre la iluminancia de una superficie situada a una cierta distancia de una fuente de luz.</description>
    </item>
    
    <item>
      <title>Personalizando nuestro editor a nuestro gusto - Unity</title>
      <link>https://moonantonio.github.io/post/2019/dev/001/</link>
      <pubDate>Thu, 24 Jan 2019 13:28:38 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2019/dev/001/</guid>
      <description>Un CustomEditor nos permite cambiar la representación visual de nuestras clases en el Unity Inspector. Hace más sencillo interactuar con las script classes asociadas a Gameobjects, prefabs, etc…

Nuestro primer paso es crear una carpeta con el nombre Editor. Para Unity es un nombre de carpeta muy especial, Unity carga automaticamente todos los scripts que modifican el comportamiento del UnityEditor desde esta carpeta. Estos scripts NO serán incluidos en el empaquetado final del juego, solo serán usado por el UnityEditor.</description>
    </item>
    
    <item>
      <title>Aprende C&#43;&#43; con Unreal - Métodos</title>
      <link>https://moonantonio.github.io/post/2018/cplusplusunreal/004/</link>
      <pubDate>Wed, 09 Jan 2019 02:47:41 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/cplusplusunreal/004/</guid>
      <description>GitHub RepoGitLab Repo</description>
    </item>
    
    <item>
      <title>Github ahora ofrece repositorios privados ilimitados en su plan Gratuito</title>
      <link>https://moonantonio.github.io/post/2019/comun/003/</link>
      <pubDate>Tue, 08 Jan 2019 18:19:31 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2019/comun/003/</guid>
      <description>Hasta hace poco los desarrolladores que querían crear repositorios privados sin tener que gastar dinero se vieron obligados a usar servicios rivales, con mayor frecuencia como Gitlab o BitBucket (Actualmente muy usado en entornos empresariales).
Las noticias de hoy, obviamente, no son buenas para las otras plataformas de hosting de código pero esto significa que los programadores al fin no están obligados a usar dos servicios de administración de código diferentes para sus proyectos privados y públicos.</description>
    </item>
    
    <item>
      <title>Presentando La Videoconsola Virtual Pico8</title>
      <link>https://moonantonio.github.io/post/2019/comun/002/</link>
      <pubDate>Tue, 08 Jan 2019 17:35:43 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2019/comun/002/</guid>
      <description>¡Bienvenidos! Hoy les voy a presentar un nuevo software que me mantuvo entretenido durante todo el año.
Les estoy hablando nada mas y nada menos que del famoso PICO-8. Para los que nunca escucharon hablar de él, PICO-8 es una videoconsola virtual, con una pantalla de 128x128 a 16 colores, que permite programar por medio de Lua tus juegos para el explorador.

Pico-8 tiene varias limitaciones:
 solo permite un máximo de 32kb por cartucho dispone tan solo de 4 canales de sonido permite un máximo de 6 botones las imágenes y sprites son pixeladas  ¿Por qué es tan bueno?</description>
    </item>
    
    <item>
      <title>Feliz Año Nuevo !!! 2019</title>
      <link>https://moonantonio.github.io/post/2019/comun/001/</link>
      <pubDate>Thu, 03 Jan 2019 21:33:24 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2019/comun/001/</guid>
      <description>Feliz Año 2019!!!, este año pasado, han ocurrido muchas cosas. Entre ellas, he terminado las entradas para aprender C# en Unity3D, he empezado a escribir las de C++ en Unreal y he abierto el Code backdoor.
También me ha gustado mucho las nuevas tecnologias que han salido destinadas para la industria de Videojuegos.
Entre ellas la ECS es la que mas me esta gustado, la orientacion a datos frente a la de objetos.</description>
    </item>
    
    <item>
      <title>Final Fantasy Tactics: 10 curiosidades sobre el juego</title>
      <link>https://moonantonio.github.io/post/2018/comun/25/</link>
      <pubDate>Wed, 19 Dec 2018 14:09:39 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/comun/25/</guid>
      <description>Final Fantasy nos ha dejado una larga lista de grandes títulos. Y ahora que se acerca la remasterización de Final Fantasy VII, de la que, de momento no sabemos en qué momento aparecerá, al menos el primer episodio, desde ScreenRant han decidido desempolvar otro juego de la saga, contemporáneo de Final Fantasy VII.
Final Fantasy Tactics apareció en 1998 en la primera PlayStation. Sin embargo, el éxito cosechado por Final Fantasy VII, que se lanzó al mercado un año antes, acabó por cubrir a este título y sumirlo en la oscuridad.</description>
    </item>
    
    <item>
      <title>Shooter Level Design - Conceptos</title>
      <link>https://moonantonio.github.io/post/2018/dev/015/</link>
      <pubDate>Fri, 30 Nov 2018 15:11:12 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/dev/015/</guid>
      <description>Un colega esta terminando el TFG de diseño de videojuegos, y el otro dia estuvimos hablando de como crear un entorno para un videojuego shooter, vimos las dificultades y los balanceos necesarios para generar una solucion factible y escalable.
Despues de unos dias de investigacion, encontre a un level design que tiene bastante experiencia en este campo, el es Booby Ross, diseñados de niveles de varios juegos de shooter.</description>
    </item>
    
    <item>
      <title>Usando la proporción de oro</title>
      <link>https://moonantonio.github.io/post/2018/comun/023/</link>
      <pubDate>Fri, 30 Nov 2018 14:16:45 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/comun/023/</guid>
      <description>La espiral de Fibonacci creada a partir de la proporción de oro.
“La media de oro”, “Proporciones divinas”, “Espiral de Fibonacci”, y la lista continúa. Esta forma se crea a partir de una fórmula matemática conocida por su apariencia estéticamente agradable. Se puede encontrar de forma natural en muchas cosas como los lóbulos de las orejas, flores y conchas de nautilus. También se utiliza para diseñar objetos artificiales como el iPod.</description>
    </item>
    
    <item>
      <title>Aprende C&#43;&#43; con Unreal - Variables</title>
      <link>https://moonantonio.github.io/post/2018/cplusplusunreal/003/</link>
      <pubDate>Thu, 08 Nov 2018 16:32:05 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/cplusplusunreal/003/</guid>
      <description>Si yo fuera un modelo de datos de una maquina, habría variables que me describirían incluyendo una para hacer referencia a mi nombre (un valor que no ha cambiado) y mi edad (un valor que cambia cada año). Algunas variables solo pueden ser determinadas por mí, como el nombre de mi película favorita, y otras pueden ser controladas total o parcialmente por fuentes externas, como mi estado civil. Todos estos tipos de relaciones se pueden modelar en código cuando conoces el vocabulario correcto.</description>
    </item>
    
    <item>
      <title>El estado de los juegos de rol basados ​​en turnos y el futuro de Final Fantasy</title>
      <link>https://moonantonio.github.io/post/2018/comun/022/</link>
      <pubDate>Thu, 08 Nov 2018 02:37:50 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/comun/022/</guid>
      <description>Nota breve: cuando se habla de Square Enix, me refiero a la división japonesa de Square, no a las partes occidentales del estudio que hacen juegos como Tomb Raider y Hitman.
“El combate por turnos es viejo. Está desactualizado. Es tan muerto como los juegos lineales para un solo jugador. Nunca volverá a funcionar en otro juego de AAA. Es algo del pasado: un recuerdo nostálgico de los juegos de ayer en el mejor de los casos &amp;ldquo;.</description>
    </item>
    
    <item>
      <title>Pechos en videojuegos - Fisicas</title>
      <link>https://moonantonio.github.io/post/2018/comun/021/</link>
      <pubDate>Wed, 07 Nov 2018 16:51:53 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/comun/021/</guid>
      <description>Los pechos oscilan. Ellos caen y se pueden mover. A lo largo de los años, muchos juegos han intentado emular el comportamiento de los pechos. Incluso hay un término para ello: &amp;ldquo;Breast physics&amp;rdquo;.
Si has jugado a juegos que tienen física en los pechos, probablemente hayas visto lo poco común que son los juegos que muestran los pechos como realmente se mueven: bolsas de grasa afectadas por la gravedad. En cambio, es más probable que un juego represente los pechos como globos de helio que tienen sus propias mentes y fuerzas gravitatorias.</description>
    </item>
    
    <item>
      <title>Aprende C&#43;&#43; con Unreal - Tu primer script</title>
      <link>https://moonantonio.github.io/post/2018/cplusplusunreal/002/</link>
      <pubDate>Wed, 31 Oct 2018 13:46:03 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/cplusplusunreal/002/</guid>
      <description>Si nunca antes has creado un script, no te preocupes, no es exactamente ciencia de cohetes. Aprender a programar es como aprender un nuevo idioma, pero estás &amp;ldquo;hablando&amp;rdquo; con la maquina. Al igual que un lenguaje humano se puede dividir en oraciones que consisten en un sustantivo y un verbo, los lenguajes de programación se pueden dividir en variables (el sustantivo) y métodos (el verbo) que a menudo se combinan en enunciados (la oración).</description>
    </item>
    
    <item>
      <title>La dificultad en los videojuegos</title>
      <link>https://moonantonio.github.io/post/2018/comun/020/</link>
      <pubDate>Mon, 29 Oct 2018 23:14:55 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/comun/020/</guid>
      <description>La frustración, desde su interpretación más sencilla vista por la psicología, no es otra cosa que la sensación (generalmente relacionada con la ira) al momento en que nuestro deseo no es satisfecho. Podemos estar viviendo la pérdida de un ser querido, un juicio por separación, tolerando un trabajo que no da lugar a nuestro crecimiento, falta de oportunidades, dificultades para llegar a fin de mes. A la larga, la frustración y sus desafíos aparecen constantemente frente a nosotros como el recordatorio de nuestra humanidad.</description>
    </item>
    
    <item>
      <title>Ingeniería inversa :: ¿Qué sacar de esto?</title>
      <link>https://moonantonio.github.io/post/2018/dev/014/</link>
      <pubDate>Sat, 27 Oct 2018 16:15:50 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/dev/014/</guid>
      <description>Llevo unos dias profundizando sobre este tema, hasta ahora solo habia realizado pequeñas investigaciones sobre esto, pero creo que es algo que puede ayudar mucho tanto para nuevos como para veteranos.
La ingeniería inversa (en inglés, reverse engineering) es el proceso de descubrir los principios tecnológicos de un objeto, herramienta, dispositivo o sistema, mediante el razonamiento abductivo (haciendo conjeturas) de su estructura, función y operación. Dicho de otra manera, se trata de tomar algo, por ejemplo un dispositivo mecánico o electrónico, para analizar su funcionamiento en detalle, con el objetivo de crear un dispositivo que haga la misma tarea o una similar sin copiar los detalles del original.</description>
    </item>
    
    <item>
      <title>Unity Shader de acumulacion</title>
      <link>https://moonantonio.github.io/post/2018/dev/013/</link>
      <pubDate>Thu, 18 Oct 2018 03:42:27 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/dev/013/</guid>
      <description>¿Te has preguntado cuánto tiempo se tarda en aplicar nieve a todas las texturas de tu juego? Probablemente muchas veces. Me gustaría mostrarle cómo crear un efecto de imagen (sombreado de espacio de pantalla) que cambiará inmediatamente la temporada de su escena en Unity.

¿Como funciona? En las imágenes de arriba puedes ver dos capturas de pantalla que presentan la misma escena. La única diferencia es que en el segundo habilité el efecto de nieve en la cámara.</description>
    </item>
    
    <item>
      <title>Unity Profiler - Optimización</title>
      <link>https://moonantonio.github.io/post/2018/dev/012/</link>
      <pubDate>Thu, 18 Oct 2018 00:38:12 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/dev/012/</guid>
      <description>Hablamos sobre cómo usar Unity Profiler para inspeccionar cuántos lotes se hacen realmente. Ahora vamos a hablar un poco más sobre el propio Profiler . Si ya lo sabes, puedes aprender algo nuevo.
Profiler La idea detrás del Profiler es proporcionar la mayor cantidad de tiempo, memoria, estadística e información posible. Puedes aprender:
 Cuánto tiempo necesita tu juego para calcular y renderizar un frame ¿Qué lleva tanto tiempo? (scripts, física, gráficos, etc.</description>
    </item>
    
    <item>
      <title>El anime de SAO Alicizacion (nuevas versiones volúmenes 9 y 10)</title>
      <link>https://moonantonio.github.io/post/2018/comun/019/</link>
      <pubDate>Sun, 07 Oct 2018 23:40:23 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/comun/019/</guid>
      <description>Hola a todos, como ya supongo que sabreis ayer se estreno el anime de SAO Alicization que corresponde a los Volúmenes 9 y 10.
La tercera temporada se adapta al arco Alicization , que toma parte en los volúmenes 9-18 de la serie de novelas ligeras de Kawahara. En 2026, le ofrecen a Kirito un trabajo con Rath. Le pidieron que trabaje para probar un nuevo tipo de equipo FullDive conocido como el Traductor de alma.</description>
    </item>
    
    <item>
      <title>Diseño de Videojuegos - Introducción</title>
      <link>https://moonantonio.github.io/post/2018/design/001/</link>
      <pubDate>Wed, 26 Sep 2018 17:26:06 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/design/001/</guid>
      <description>Esta serie de ayudas están diseñada para una introducción rápida al diseño de videojuegos. Introducirá brevemente la mayoría de las características, pero desde la perspectiva del uso en casos de uso general, y con suerte, será más interesante aprender de él. Escribiré asumiendo que no tienes conocimientos de diseño.
¿Cómo empezar? Necesitará algún programa de documentos(Word o Doc), libreta y papel. Se explicaran diversos conceptos de programación, arte, animación entre muchas otras.</description>
    </item>
    
    <item>
      <title>Localización usando .PO</title>
      <link>https://moonantonio.github.io/post/2018/dev/011/</link>
      <pubDate>Tue, 25 Sep 2018 19:26:11 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/dev/011/</guid>
      <description>Traducir un juego a múltiples idiomas es una forma muy efectiva de exponerlo a nuevas audiencias. Sin embargo, puede convertirse en un verdadero dolor de cabeza si no lo hace de forma extensible y mantenible. Un sistema .po es una gran manera de administrar traducciones, y es un sistema útil para saber más que solo juegos. Analizaré formas en que puede ampliar el sistema para que sea más robusto, pero la mayoría de los detalles de estos dependen demasiado de su configuración para ser detallados por completo.</description>
    </item>
    
    <item>
      <title>Aprende C&#43;&#43; con Unreal - Introducción</title>
      <link>https://moonantonio.github.io/post/2018/cplusplusunreal/001/</link>
      <pubDate>Thu, 13 Sep 2018 01:46:17 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/cplusplusunreal/001/</guid>
      <description>Esta serie de ayudas están diseñada para una introducción rápida a la programación en C++ usando Unreal. Introducirá brevemente la mayoría de las características del lenguaje, pero desde la perspectiva del uso dentro de Unreal en lugar de casos de uso general, y con suerte, será más interesante aprender de él. Escribiré asumiendo que ya tienes Unreal y tienes una comprensión básica del programa.
¿Cómo empezar? Necesitará el motor Unreal Engine 4.</description>
    </item>
    
    <item>
      <title>AnimeChart - Otoño 2018[v1]</title>
      <link>https://moonantonio.github.io/post/2018/animechart/001/</link>
      <pubDate>Tue, 11 Sep 2018 15:59:03 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/animechart/001/</guid>
      <description>♢ Temporada Otoño 2018 de Anime ♢

.\Moon</description>
    </item>
    
    <item>
      <title>¡Consejos esenciales de Gamedev &amp; Unity!</title>
      <link>https://moonantonio.github.io/post/2018/dev/010/</link>
      <pubDate>Mon, 10 Sep 2018 14:00:03 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/dev/010/</guid>
      <description>¿Quieres saber cómo aprender rápidamente la programación de videojuegos?
Solo haz juegos.
 Aquí hay algunos consejos para ayudarlo en el camino:
1. No reinventar la rueda, use las herramientas incorporadas del motor Al trabajar en cualquier motor, como Unity o Unreal Engine, algunos desarrolladores, principalmente provenientes de un campo de ciencias de la computación, pueden tener tendencia a inclinarse y comenzar a trabajar en algoritmos o estructuras enormes sin saber si ya existen en el motor.</description>
    </item>
    
    <item>
      <title>Aprende C# con Unity - Scriptable Objects</title>
      <link>https://moonantonio.github.io/post/2018/csharpunity/012/</link>
      <pubDate>Tue, 04 Sep 2018 19:20:57 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/csharpunity/012/</guid>
      <description>Los Objetos Scriptables son un tipo especial de objeto de datos en Unity. Tienen varios beneficios importantes, pero es posible que no funcionen de manera ideal para cada situación. En esta lección, cubriremos lo que son y cómo usarlos.
GitHub RepoGitLab Repo
Introducción a los Objetos Scriptables Puede pensar en un objeto programable como un objeto destinado solo a contener datos. Si ha estado utilizando clases o estructuras tradicionales de C# para objetos simples solo de datos, podría utilizarlas en su lugar.</description>
    </item>
    
    <item>
      <title>Anime Chart para las temporadas de Anime</title>
      <link>https://moonantonio.github.io/post/2018/comun/012/</link>
      <pubDate>Mon, 03 Sep 2018 18:54:15 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/comun/012/</guid>
      <description>En estas vacaciones, cortas pero relajantes, no me he conectado mucho. Pero eso no quiere decir que este parado.
Me he puesto al dia con algunas investigaciones que me interesaban (tan solo teoricamente) y he investigado sobre ECS, AI, CPP con Unreal y algunas cosas extras (Novelas de fantasia xD). Por ello en proximas entradas, redactare algunas conclusiones que he sacado sobre los estudios que he realizado.
Pero aqui no vengo para decir eso, en esta entrada quiero dejar constancia de que he realizado un proyectillo con el que realizo charts de anime con las que anunciare las proximas temporadas de anime que vendran.</description>
    </item>
    
    <item>
      <title>Dragalia Lost : El nuevo videojuego de Nintendo</title>
      <link>https://moonantonio.github.io/post/2018/juegos/001/</link>
      <pubDate>Wed, 29 Aug 2018 15:15:32 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/juegos/001/</guid>
      <description>Después de años de espera, Nintendo finalmente ha comenzado a poner algunos de sus títulos más icónicos en dispositivos iOS y Android.
Mientras que el éxito del Switch continúa canibalizando el mercado de las consolas Nintendo 2DS y Nintendo 3DS, es evidente que la compañía está apostando seriamente al desarrollo para los ecosistemas móviles de Apple y Google.
Super Mario Run ha sido exitoso para la compañía, pero parece que Nintendo quiere más y tiene algunos títulos nuevos y originales en camino para iOS y Android.</description>
    </item>
    
    <item>
      <title>Dungeon Danmachi Icon Folder</title>
      <link>https://moonantonio.github.io/post/2018/icon/002/</link>
      <pubDate>Mon, 27 Aug 2018 04:56:30 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/icon/002/</guid>
      <description>DUNGEON DANMACHI es una serie de novelas ligeras escritas por Fujino Ōmori e ilustradas por Suzuhito Yasuda. Ha sido la novela ligera más votada por los fans en los premios Sugoi Japan Awards de la edición de 2016.
La historia toma lugar en el país ficticio de Orario cuyo lugar principal es el Dungeon (ダンジョン Danjon?, lit. calabozo) que contiene toda clase de monstruos, desde elfos, hasta dragones. Los aventureros visitan el Dungeon para derrotar monstruos y tomar sus fragmentos de cristal, los cuales pueden usar para crear objetos mágicos, cambiarlos por dinero, etc.</description>
    </item>
    
    <item>
      <title>Aprende C# con Unity - Structs</title>
      <link>https://moonantonio.github.io/post/2018/csharpunity/011/</link>
      <pubDate>Sun, 26 Aug 2018 13:21:16 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/csharpunity/011/</guid>
      <description>Las estructuras son como Clases, pero completamente diferentes. Si no sabe qué es una estructura o cuándo la usaría, o si no conoce la diferencia entre pasar por referencia y pasar por valor, esta lección es para usted.
GitHub RepoGitLab Repo
Structs en Unidad Dado que esta serie se basa en aprender C# para Unity, comencemos por señalar algunos lugares donde es posible que ya haya estado utilizando Structs:</description>
    </item>
    
    <item>
      <title>Aprende C# con Unity - Enums y Flags</title>
      <link>https://moonantonio.github.io/post/2018/csharpunity/010/</link>
      <pubDate>Sat, 25 Aug 2018 14:38:15 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/csharpunity/010/</guid>
      <description>Mencionamos brevemente los enums en nuestra última lección, por lo que sentí que ahora sería un buen momento para tratarla en mayor profundidad. Al mismo tiempo, podemos ampliar el tema e introducir Flags (máscaras de bits). Algo de esto se profundiza en el lado nerd de la programación, pero intentaré que todo sea fácil de entender.
GitHub RepoGitLab Repo
El tipo &amp;ldquo;Enum&amp;rdquo; Primero introduje la enumeración en la lección anterior con la configuración de &amp;ldquo;Difficulties&amp;rdquo;:</description>
    </item>
    
    <item>
      <title>Aprende C# con Unity - Guardando datos</title>
      <link>https://moonantonio.github.io/post/2018/csharpunity/009/</link>
      <pubDate>Fri, 24 Aug 2018 17:42:37 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/csharpunity/009/</guid>
      <description>Supongamos que estás haciendo un juego &amp;ldquo;completo&amp;rdquo;. Quieres una pantalla de título y todo. Su usuario puede seleccionar el número de jugadores o una configuración de dificultad, etc., y luego &amp;hellip; ¿cómo pasa la información a la siguiente escena? O, lo que es más importante (y algo truculento) ¿cómo se puede guardar una sesión de juego y volver a cargarla más tarde? mostraré algunas de las opciones que me gustan.</description>
    </item>
    
    <item>
      <title>Aprende C# con Unity - Clases</title>
      <link>https://moonantonio.github.io/post/2018/csharpunity/008/</link>
      <pubDate>Fri, 24 Aug 2018 12:36:08 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/csharpunity/008/</guid>
      <description>Ya sea que lo recuerdes o no, has estado creando clases todo el tiempo en las lecciones anteriores. He comentado brevemente varias características de clases como herencia y constructores, pero hay mucho más por cubrir. En esta lección, nos enfocaremos en esos temas con mayor profundidad e introduciremos algunos temas más avanzados como polimorfismo, constructores estáticos, clases abstractas y clases estáticas.
GitHub RepoGitLab Repo
Herencia La herencia es el concepto de que una clase toma todas las funcionalidades de una clase &amp;ldquo;padre&amp;rdquo; o &amp;ldquo;base&amp;rdquo; al mismo tiempo que brinda la oportunidad de ampliar o modificar la lógica previamente disponible.</description>
    </item>
    
    <item>
      <title>Aprende C# con Unity - Corrutinas</title>
      <link>https://moonantonio.github.io/post/2018/csharpunity/007/</link>
      <pubDate>Fri, 24 Aug 2018 02:48:35 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/csharpunity/007/</guid>
      <description>Una corrutina es una forma especial de hacer que la lógica suceda con el tiempo. Debo admitir que nunca usé corrutinas hasta Unity, había estado usando programación basada en eventos en cualquier otro escenario comparable. Sin embargo, corrutinas son una alternativa rápida y fácil que definitivamente vale la pena ver. En esta lección, mostraré cómo funciona Unity con corrutinas, incluidas varias formas de ceder el control e incluso vincular corrutinas para tener un control total sobre la lógica basada en el tiempo.</description>
    </item>
    
    <item>
      <title>Aprende C# con Unity - Genéricos</title>
      <link>https://moonantonio.github.io/post/2018/csharpunity/006/</link>
      <pubDate>Thu, 23 Aug 2018 02:40:43 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/csharpunity/006/</guid>
      <description>Los genéricos proporcionan una forma de hacer una especie de &amp;ldquo;plantilla&amp;rdquo; de su código que funciona de la misma manera en una variedad de tipos de datos diferentes. Si bien podría considerarse un tema más avanzado, existen algunos beneficios importantes al usarlos desde el principio. En esta lección, presentaré listas genéricas y diccionarios, y mostraré cómo se usan los genéricos para funcionalidades específicas de Unity, como obtener componentes y cargar recursos.</description>
    </item>
    
    <item>
      <title>Aprende C# con Unity - Bucles</title>
      <link>https://moonantonio.github.io/post/2018/csharpunity/005/</link>
      <pubDate>Thu, 23 Aug 2018 01:03:45 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/csharpunity/005/</guid>
      <description>Como programador, con frecuencia trabajará con un &amp;ldquo;grupo&amp;rdquo; de datos (como una matriz o array que presenté en la lección anterior). Tic Tac Toe, por ejemplo, tiene un tablero de 3 × 3 con nueve celdas totales. Si estuviera creando un método para operar en ese grupo de datos, como limpiar un tablero para un nuevo juego, no querría tener que aplicar manualmente los cambios a todos y cada uno de los valores de la matriz.</description>
    </item>
    
    <item>
      <title>Las herramientas de bajo coste usadas en un Indie Game Studio</title>
      <link>https://moonantonio.github.io/post/2018/comun/011/</link>
      <pubDate>Wed, 22 Aug 2018 23:26:13 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/comun/011/</guid>
      <description>Cuando se es un pequeño estudio, puede ser difícil encontrar el paquete de software adecuado, manteniendo los gastos mensuales razonables. Hacer la tarea más difícil es el hecho de que muchas herramientas tienen más funciones completas que las necesidades de un estudio pequeño, o están diseñadas para ser incluidas con otras herramientas premium por el mismo desarrollador.

He recogido una serie de herramientas que evita niveles premium y lock-in de proveedores.</description>
    </item>
    
    <item>
      <title>Unity : Aseprite Workflow</title>
      <link>https://moonantonio.github.io/post/2018/dev/009/</link>
      <pubDate>Wed, 22 Aug 2018 21:00:28 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/dev/009/</guid>
      <description>Administrar las hojas de sprites y las animaciones de pixel art dentro de Unity sin herramientas personalizadas es una pesadilla. Esto es lo que tiene que hacer solo para crear los assets para un solo personaje:
 Crea una textura (png) a través de un programa de pintura como Photoshop e importa un png en el proyecto de Unity. Establezca las configuraciones de importación deseadas para que la textura importada coincida con la misma configuración que ha utilizado para cada textura que haya importado.</description>
    </item>
    
    <item>
      <title>Aprende C# con Unity - Métodos</title>
      <link>https://moonantonio.github.io/post/2018/csharpunity/004/</link>
      <pubDate>Sun, 19 Aug 2018 08:32:53 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/csharpunity/004/</guid>
      <description>La parte de &amp;ldquo;acción&amp;rdquo; de la programación proviene de &amp;ldquo;llamar&amp;rdquo; (también conocido como &amp;ldquo;invocar&amp;rdquo;) algo llamado &amp;ldquo;método&amp;rdquo; (también conocido como &amp;ldquo;función&amp;rdquo;). En esta lección aprenderemos cómo definir y llamar a nuestros propios métodos, y luego revisaremos algunos más que son especiales para Unity. Finalmente, crearemos nuestra propia demo de &amp;ldquo;Magic 8 Ball&amp;rdquo; y explicaremos cómo vincular un método con el clic de un botón y generar el resultado de una etiqueta.</description>
    </item>
    
    <item>
      <title>Aprende C# con Unity - Variables</title>
      <link>https://moonantonio.github.io/post/2018/csharpunity/003/</link>
      <pubDate>Sun, 19 Aug 2018 06:55:40 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/csharpunity/003/</guid>
      <description>Si yo fuera un modelo de datos de una maquina, habría variables que me describirían incluyendo una para hacer referencia a mi nombre (un valor que no ha cambiado) y mi edad (un valor que cambia cada año). Algunas variables solo pueden ser determinadas por mí, como el nombre de mi película favorita, y otras pueden ser controladas total o parcialmente por fuentes externas, como mi estado civil. Todos estos tipos de relaciones se pueden modelar en código cuando conoces el vocabulario correcto.</description>
    </item>
    
    <item>
      <title>Aprende C# con Unity - Tu primer script</title>
      <link>https://moonantonio.github.io/post/2018/csharpunity/002/</link>
      <pubDate>Sun, 19 Aug 2018 05:26:46 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/csharpunity/002/</guid>
      <description>Si nunca antes has creado un script, no te preocupes, no es exactamente ciencia de cohetes. Aprender a programar es como aprender un nuevo idioma, pero estás &amp;ldquo;hablando&amp;rdquo; con la maquina. Al igual que un lenguaje humano se puede dividir en oraciones que consisten en un sustantivo y un verbo, los lenguajes de programación se pueden dividir en variables (el sustantivo) y métodos (el verbo) que a menudo se combinan en enunciados (la oración).</description>
    </item>
    
    <item>
      <title>Aprende C# con Unity - Introducción</title>
      <link>https://moonantonio.github.io/post/2018/csharpunity/001/</link>
      <pubDate>Sun, 19 Aug 2018 04:49:04 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/csharpunity/001/</guid>
      <description>Esta serie de ayudas están diseñada para una introducción rápida a la programación en C# usando Unity. Introducirá brevemente la mayoría de las características del lenguaje, pero desde la perspectiva del uso dentro de Unity en lugar de casos de uso general, y con suerte, será más interesante aprender de él. Escribiré asumiendo que ya tienes Unity y tienes una comprensión básica del programa.
¿Cómo empezar? Necesitará el motor Unity 3D.</description>
    </item>
    
    <item>
      <title>El rol del diseñador de videojuegos</title>
      <link>https://moonantonio.github.io/post/2018/comun/010/</link>
      <pubDate>Mon, 13 Aug 2018 03:26:09 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/comun/010/</guid>
      <description>En esta ocasión hablaré del trabajo del Diseñador de Videojuegos, integrado en el proceso de desarrollo de un equipo. Encontraréis que es difícil, dentro de los grupos independientes, que la gente conozca este perfil y comprendan este rol de una manera realista. Mientras que todo el mundo sabe lo que tiene que hacer un programador o lo que hace un artista, poca gente comprende qué es exactamente un diseñador de videojuegos y dónde empiezan y acaban sus competencias.</description>
    </item>
    
    <item>
      <title>Darling in the FranXX Icon Folder</title>
      <link>https://moonantonio.github.io/post/2018/icon/001/</link>
      <pubDate>Mon, 13 Aug 2018 00:14:24 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/icon/001/</guid>
      <description>DARLING in the FRANXX es una serie de anime de ciencia ficción producida por el estudio Trigger en colaboración con A-1 Pictures.​ El anime, que cuenta con un guion original, fue anunciado oficialmente en la Anime Expo en julio de 2017.​

 En un futuro distante, la humanidad ha creado ciudades fortificadas llamadas Plantaciones, que funcionan como refugio para las personas, pues el suelo de la Tierra está arruinado. Dentro de estas ciudades futuristas, niños y niñas son entrenados para pilotar robots gigantes llamados Franxx, sin saber nada del mundo exterior.</description>
    </item>
    
    <item>
      <title>[Vine] - Danmachi Superacion</title>
      <link>https://moonantonio.github.io/post/2018/amv/006/</link>
      <pubDate>Wed, 08 Aug 2018 01:18:27 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/amv/006/</guid>
      <description>Vine de Danmachi Superacion Este Vine hace referencia a Danmachi. es una serie de novelas ligeras escritas por Fujino Ōmori e ilustradas por Suzuhito Yasuda. Ha sido la novela ligera más votada por los fans en los premios Sugoi Japan Awards de la edición de 2016. En estos premios, los fanáticos deciden qué anime, manga, novela es la más indicada para ser comercializada en el mercado internacional.
 Vinculos</description>
    </item>
    
    <item>
      <title>Consejos para agilizar tu trabajo como programador</title>
      <link>https://moonantonio.github.io/post/2018/comun/009/</link>
      <pubDate>Wed, 08 Aug 2018 00:52:10 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/comun/009/</guid>
      <description>En el trabajo o en la escuela, los que nos preparamos para la programación tenemos la ventaja de poder aprovechar el pc para automatizar o mejorar lo que hacemos. Independientemente de si el trabajo en sí consiste en programar, las tareas de cualquier tipo pueden automatizarse para beneficio propio o de la organización (si es que la organización te apoya en eso, de lo contrario no desperdicies tu energía). Puedes pensar que puede haber código por todas partes, algo así como “Code here, code there, code everywhere” y bajo esta idea te doy 3 consejos para agilizar tus tareas en el trabajo o en la escuela.</description>
    </item>
    
    <item>
      <title>¿Por qué podemos recuperar archivos eliminados?</title>
      <link>https://moonantonio.github.io/post/2018/comun/008/</link>
      <pubDate>Wed, 08 Aug 2018 00:26:04 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/comun/008/</guid>
      <description>Probablemente alguna vez has escuchado hablar de personas que han logrado recuperar archivos después de haber sido borrados (y no hablo de archivos que solamente estaban en la papelera). Si te interesa saber cómo es posible hacer esto, sigue leyendo.
¿Cómo funcionan los discos duros? Antes de explicar por qué es posible recuperar un archivo es necesario comprender cómo funciona un disco duro. A diferencia de los discos de estado sólido o SSD, los discos duros o HDD almacenan la información en estado físico.</description>
    </item>
    
    <item>
      <title>Estudio de UNET</title>
      <link>https://moonantonio.github.io/post/2018/dev/008/</link>
      <pubDate>Mon, 16 Jul 2018 17:18:59 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/dev/008/</guid>
      <description>Esta entrada, es un recordatorio personal, despues de hablar con amigos y de hablarme tan bien de UNET (Yo solo toque NET en Unity 3.5, :S), me entro el gusanico de ver esta nueva tecnologia, por lo que decidi ponerme a investigar, pero descubri que hay muy poca información sobre esto.
Detallo en más profundidad, hay información, pero del High API. Lo que yo queria ver es información sobre el Low API y de esto hay poco, asi que decidi crear esta entrada para guardar como recuerdo este estudio, por si proximamente tengo que volver a mirarlo (soy un neurotico del guardado de datos xD).</description>
    </item>
    
    <item>
      <title>WebClient gestor de conexiones Unity3D</title>
      <link>https://moonantonio.github.io/post/2018/dev/007/</link>
      <pubDate>Fri, 06 Jul 2018 23:46:32 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/dev/007/</guid>
      <description>WebClient es un componente del lado del cliente, un modelo distribuido de aplicaciones de niveles múltiples utilizado para crear y desarrollar aplicaciones empresariales. Los componentes del lado del cliente son típicamente aplicaciones de computadora que se ejecutan en la computadora de un usuario y se conectan a un servidor. Estos componentes realizan operaciones en el lado del cliente, ya que pueden necesitar acceso a la información disponible solo en el lado del cliente, como la entrada del usuario, o porque el servidor carece de la potencia de procesamiento necesaria en tales operaciones.</description>
    </item>
    
    <item>
      <title>El Arte del diseño</title>
      <link>https://moonantonio.github.io/post/2018/comun/007/</link>
      <pubDate>Thu, 28 Jun 2018 20:34:23 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/comun/007/</guid>
      <description>Un diseño es el resultado final de un proceso, cuyo objetivo es buscar una solución idónea a cierta problemática particular, pero tratando en lo posible de ser práctico y a la vez estético en lo que se hace. Para poder llevar a cabo un buen diseño es necesario la aplicación de distintos métodos y técnicas de modo tal que pueda quedar plasmado bien sea en bosquejos, dibujos, bocetos o esquemas lo que se quiere lograr para así poder llegar a su producción y de este modo lograr la apariencia más idónea y emblemática posible.</description>
    </item>
    
    <item>
      <title>[Vine] - Bat Girl Xtrem</title>
      <link>https://moonantonio.github.io/post/2018/amv/005/</link>
      <pubDate>Thu, 28 Jun 2018 20:22:01 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/amv/005/</guid>
      <description>Vine de Bat Girl Xtrem Este Vine hace referencia a BatGirl. Ella era el alter-ego de Betty Kane, sobrina de Kathy Kane, alias Batwoman. Batwoman y Batgirl fueron creadas como contrapuntos románticos de Batman y Robin.
 Vinculos
CoubVimeo</description>
    </item>
    
    <item>
      <title>Terra Battle 2!?</title>
      <link>https://moonantonio.github.io/post/2018/comun/006/</link>
      <pubDate>Thu, 28 Jun 2018 19:37:55 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/comun/006/</guid>
      <description>Tras el anuncio previo de la versión norteamericana del cierre de Terra Battle 2, hoy (28 de junio), Mistwalker anunció que la versión japonesa de Terra Battle 2 también cerrará en septiembre de este año.

Mistwalker es un estudio diseñador de videojuegos japonés fundado por Hironobu Sakaguchi, creador de la popular serie Final Fantasy.
Sakaguchi asumió el rol de presidente en el nuevo estudio, y Kensuke Tanaka, creador del sistema PlayOnline, es el vicepresidente.</description>
    </item>
    
    <item>
      <title>Steam en 2018</title>
      <link>https://moonantonio.github.io/post/2018/comun/005/</link>
      <pubDate>Thu, 28 Jun 2018 18:37:51 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/comun/005/</guid>
      <description>Steam es una plataforma de distribución digtal de videojuegos desarrollada por Valve. A través de ella los usuarios pueden comprar y descargar una gran cantidad de juegos de diferentes desarrolladoras, no solo de Valve, que se encuentran actualmente en su catálogo. Aparte de todo eso ofrece varios servicios más que van desde logros o listas de amigos para jugar hasta actualizaciones automáticas e instantáneas.
¿QUE OFRECE STEAM? Como ya se dijo antes Steam no solo es una plataforma para comprar nuestros juegos, también ofrece otros servicios y una comunidad enorme que ayuda a mejorar la experiencia, como por ejemplo:</description>
    </item>
    
    <item>
      <title>[Vine] - Darling Red</title>
      <link>https://moonantonio.github.io/post/2018/amv/004/</link>
      <pubDate>Wed, 13 Jun 2018 15:23:49 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/amv/004/</guid>
      <description>Vine de Darling Red Este Vine hace referencia a Zero Two. es uno de los personajes principales de Darling in the FranXX. Es miembro de la élite de pilotos de FRANXX y el pistilo del FRANXX Strelizia, que pilota junto a Hiro.
 Vinculos
CoubVimeo</description>
    </item>
    
    <item>
      <title>¿Qué pruebas debemos hacerle a nuestro videojuego?</title>
      <link>https://moonantonio.github.io/post/2018/comun/004/</link>
      <pubDate>Tue, 05 Jun 2018 17:17:37 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/comun/004/</guid>
      <description>“Los test no son opcionales”. Esto que parece a muchos una verdad, sigue siendo uno de los temas pendientes en el mundo del desarrollo de aplicaciones de software actual.
Sí, increíblemente aún hay muchos compañeros “del metal” que no son conscientes que programar sin pruebas no solo es como hacer acrobacias en el trapecio sin red de seguridad, sino además una fuente de errores, malas prácticas y ansiedad.
Y por ello quiero repasar los fundamentos básicos de las pruebas que debiéramos aplicar, cada uno en su necesidad, a nuestros desarrollos.</description>
    </item>
    
    <item>
      <title>Microsoft compra Github : desde la perspectiva de un desarrollador</title>
      <link>https://moonantonio.github.io/post/2018/comun/003/</link>
      <pubDate>Tue, 05 Jun 2018 17:04:50 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/comun/003/</guid>
      <description>Como casi todas las noticias bomba, el rumor de que Microsoft estaba interesada en la adquisición del principal repositorio de código libre del mundo, GitHub, me llego a través de las redes sociales cargado de incertidumbre y desconfianza.
Lo que no ha sido sorprendente ha sido la sobre reacción de la comunidad de desarrolladores, en donde se encendieron las viejas antorchas de la inagotable guerra entre los fanboys (pro) y los talibanes (anti) Microsoft.</description>
    </item>
    
    <item>
      <title>[E3 2018] Compañías y posibles rumores</title>
      <link>https://moonantonio.github.io/post/2018/comun/002/</link>
      <pubDate>Tue, 05 Jun 2018 16:26:10 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/comun/002/</guid>
      <description>Todos los años entre mayo y junio se realiza en Estados Unidos la Electronic Entrainment Expo o E3, la convención de videojuegos más importante de la industria.
En este evento las marcas y empresas de la industria de los videojuegos dan a conocer sus nuevas consolas, juegos o innovaciones, siendo el evento más esperado para todos los gamers.

Ya estamos a poco más de una semana de que empiecen los eventos principales de la feria más importante de la industria del videojuego, el E3, que se celebrará en Los Ángeles del 12 al 15 de junio, pero las principales compañías realizarán sus conferencias de prensa antes de que se abran oficialmente las puertas y, de hecho, estos días previos ya estamos viviendo todo tipo de anuncios, filtraciones y confirmaciones apresuradas porque es complicado ocultar lo que se va a presentar cuando toda la prensa está pendiente.</description>
    </item>
    
    <item>
      <title>[Vine] - Angel Caido || War</title>
      <link>https://moonantonio.github.io/post/2018/amv/003/</link>
      <pubDate>Mon, 04 Jun 2018 15:05:33 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/amv/003/</guid>
      <description>Vine de Angel Caido || War Este Vine hace referencia a un tramo de la pelicula Game no life Zero. Shiro (白し ろ, Shiro ) es la principal protagonista femenina de la serie No Game No Life y la mitad tranquila y calculadora de los hermanos.
 Vinculos
CoubVimeo</description>
    </item>
    
    <item>
      <title>Mejora del blog</title>
      <link>https://moonantonio.github.io/post/2018/comun/001/</link>
      <pubDate>Wed, 30 May 2018 01:09:17 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/comun/001/</guid>
      <description>Despues de ver la evolucion que esta sufriendo hugo con su tecnologia de paginas estaticas, me he puesto a investigar un poco sobre su lenguaje en especifico y como funciona internamente. Mi conclusion:
Un lenguaje de subcapas, bastante lioso y dificil de llevar. Esta escrito en go, pero hablando de base, despues tiene unas subcapas de un mini-lenguaje que lo hacen un poco tedioso, a mi gusto. Aunque no puedo decir nada de su rapidez, ya que se ha puesto entre los primeros en muy poco tiempo y su comunidad a crecido numerosamente.</description>
    </item>
    
    <item>
      <title>[Vine] - DarkWar || Light</title>
      <link>https://moonantonio.github.io/post/2018/amv/002/</link>
      <pubDate>Tue, 29 May 2018 01:40:09 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/amv/002/</guid>
      <description>Vine de DarkWar || Light Este Vine hace referencia a un episodio del anime Danmachi (Sword Orario). Aiz Wallenstein(アイズ・ヴァレンシュタイン, Aizu Varenshutain) es una de las poderosas Aventureras miembro de Familia Loki. Por su eficiencia en la cacería dentro del calabozo le dieron el título Sword Princess.
 Vinculos
CoubVimeo</description>
    </item>
    
    <item>
      <title>Markdown - Lenguaje de marcado principal</title>
      <link>https://moonantonio.github.io/post/2018/dev/005/</link>
      <pubDate>Tue, 29 May 2018 00:10:41 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/dev/005/</guid>
      <description>A continuación, veremos qué es Markdown exactamente, cómo funciona, qué es necesario para usarlo, en que entornos resulta práctico y, por supuesto, repasaremos brevemente algunas de las muchas herramientas que existen para poder utilizarlo, tanto en local como en la web.
Introducción Markdown es un lenguaje de marcado que facilita la aplicación de formato a un texto empleando una serie de caracteres de una forma especial. En principio, fue pensado para elaborar textos cuyo destino iba a ser la web con más rapidez y sencillez que si estuviésemos empleando directamente HTML.</description>
    </item>
    
    <item>
      <title>[Vine] - Miku || End</title>
      <link>https://moonantonio.github.io/post/2018/amv/001/</link>
      <pubDate>Mon, 28 May 2018 23:52:42 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/amv/001/</guid>
      <description>Vine de Miku || End Este Vine hace referencia a Miku Hatsume, el avatar de Vocaloid, que es un software de síntesis de voz que es capaz de cantar. El software proporciona al usuario la capacidad de sintetizar canciones escribiendo la letra y la melodía. Con el programa podemos cambiar la pronunciación y agregar efectos (como el vibrato, o el cambio de dinámica y el tono de la voz). Éste software está destinado a músicos profesionales, así como usuarios de la música computarizada.</description>
    </item>
    
    <item>
      <title>Tipos de lenguajes de programación {Bajo y Alto nivel}</title>
      <link>https://moonantonio.github.io/post/2018/dev/004/</link>
      <pubDate>Sat, 26 May 2018 02:38:41 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/dev/004/</guid>
      <description>¿Que es un lenguaje de programacion? Un lenguaje de programacion, es un lenguaje que puede ser utilizado para controlar el comportamiento de una maquina. Consiste en un conjunto de reglas sintacticas y semanticas que definen su estructura y el significado de sus elementos, respectivamente.
El ordenador solo entiende un lenguaje conocido como codigo binario o codigo maquina, consistente en ceros y unos. Es decir, solo utiliza 0 y 1 para codificar cualquier accion.</description>
    </item>
    
    <item>
      <title>Unity3D Plugins ¿Que son?</title>
      <link>https://moonantonio.github.io/post/2018/dev/003/</link>
      <pubDate>Sat, 26 May 2018 00:57:20 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/dev/003/</guid>
      <description>Hoy decidi compartir, algo que creo que no es un &amp;ldquo;conocimiento común&amp;rdquo; y no hay muchos recursos sobre ese tema en Internet, despues de que varios colegas que estan empezando en este mundo, me preguntasen como poder usar APIs en otros lenguajes en Unity3D, como por ejemplo el SKD de Steam que esta en C++ o las librerias .JAR de Android decidi crear una entrada nueva. Mostrare como crear bibliotecas simples de C/C++ para Unity3D.</description>
    </item>
    
    <item>
      <title>ScriptableObjects</title>
      <link>https://moonantonio.github.io/post/2018/dev/002/</link>
      <pubDate>Tue, 17 Apr 2018 14:04:47 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/dev/002/</guid>
      <description>Los Objetos Scriptables son un tipo especial de objeto de datos en Unity. Tienen varios beneficios importantes, pero es posible que no funcionen de manera ideal para cada situación.
Introducción a los Objetos Scriptables Puede pensar en un objeto programable como un objeto destinado solo a contener datos. Si ha estado utilizando clases o estructuras tradicionales de C# para objetos simples solo de datos, podría utilizarlas en su lugar. Por supuesto, usted se estará preguntando &amp;ldquo;por qué&amp;rdquo; le gustaría usar un Objeto Scriptable.</description>
    </item>
    
    <item>
      <title>MonoBehavior en Unity</title>
      <link>https://moonantonio.github.io/post/2018/dev/001/</link>
      <pubDate>Sat, 10 Mar 2018 20:34:29 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2018/dev/001/</guid>
      <description>Unity puede estar desperdiciando mucho rendimiento de la CPU simplemente llamando a sus funciones MonoBehaviour. Realmente no importa lo que estén haciendo tus scripts. Si tiene cientos o miles de ellos, hay que tener en cuenta que hay un nuevo campo de optimización.
Métodos mágicos Las llamadas a funciones MonoBehaviour son lentas. Estoy hablando de funciones como Update() , LateUpdate(), OnRender(), etc. Son los llamados métodos mágicos, y si estas familiarizado con los lenguajes de programación orientados a objetos, este concepto parece llamar a un método usando mecanismo de reflexión (la reflexión habilita llamadas de métodos incluso si no conoce la interfaz).</description>
    </item>
    
    <item>
      <title>Clase Abstracta VS Interfaces</title>
      <link>https://moonantonio.github.io/post/2017/programacion/007/</link>
      <pubDate>Fri, 16 Feb 2018 10:40:58 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/programacion/007/</guid>
      <description>El uso de clases abstractas y herencia para organizar la lógica de nuestras aplicaciones se puede sustituir o complementar con interfaces y métodos de extensión usando C#. En este artículo veremos un ejemplo de ambas aproximaciones así como sus ventajas e inconvenientes.
Clases Abstractas Las clases abstractas nos permiten tener una clase base con cierta funcionalidad común ya implementada, sobre la que podemos heredar y especificar algunos métodos. Para este ejemplo, la clase Transporte implementa el método Mover, y las clases Coche y Bicicleta especifican el número de ruedas.</description>
    </item>
    
    <item>
      <title>Feliz 2018 y nuevas noticias con el</title>
      <link>https://moonantonio.github.io/post/2017/diario/010/</link>
      <pubDate>Tue, 09 Jan 2018 03:50:03 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/diario/010/</guid>
      <description>Empezamos el año con nuevas noticias De primeras, feliz año 2018 a los lectores, ^^. Queria traer estas noticias a principios de año, asique aqui las dejo.
Unity dejara de dar soporte para MonoDevelop-Unity a partir de la Unity 2018.1, esto quiere decir que en Unity 2018.1 no vendra con el IDE de MonoDevelop, ya que no admite muchas de las caracteristicas a las que esta migrando Unity con .</description>
    </item>
    
    <item>
      <title>Motores para Videojuegos</title>
      <link>https://moonantonio.github.io/post/2017/utiles/016/</link>
      <pubDate>Tue, 19 Dec 2017 19:27:13 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/utiles/016/</guid>
      <description>Diferentes motores graficos para videojuegos Si deseas desarrollar y lanzar tu propio juego en el mundo, hay algunas cosas muy importantes a tener en cuenta antes de comenzar en este viaje. Hay muchos “game engines” libres que tienen las características que necesitas para crear tu juego, pero la cuestión es: ¿que engine debo elegir?
En los últimos años han aparecido muchos engines al alcance del gran público , dando la oportunidad para que los aspirantes a desarrolladores independientes, puedan crear el juego que siempre tuvieron en mente.</description>
    </item>
    
    <item>
      <title>Cómo escribir una buena sinopsis y para que</title>
      <link>https://moonantonio.github.io/post/2017/utiles/015/</link>
      <pubDate>Wed, 15 Nov 2017 19:39:31 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/utiles/015/</guid>
      <description>Cómo escribir una buena sinopsis El primer factor en la compra de una novela o juego es el género. El segundo es el nombre de su autor o compañia. El tercero es la sinopsis.
¿cómo escribir sinopsis atractivas y que cumplan el objetivo de vender? Vamos a intentar explicarlo en 8 pasos.
1) Sé breve:
Una buena sinopsis no debería tener más de doscientas cincuenta palabras, así que es importante que conozcas los puntos principales de tu historia, aquellos que llevan el peso de la acción y, por lo tanto, la hacen atractiva para poder presentársela a los usuarios de forma concisa.</description>
    </item>
    
    <item>
      <title>MVC simplificado.</title>
      <link>https://moonantonio.github.io/post/2017/dev/014/</link>
      <pubDate>Tue, 07 Nov 2017 22:18:34 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/dev/014/</guid>
      <description>Introduccion Los programadores principiantes generalmente comienzan a aprender el oficio con el Hello World. A partir de ahí, sin un patron de diseño, se suele aumentar sin ninguna metodologia los proyectos y terminan siendo un caos. Cada nuevo desafío lleva a casa una lección importante:
Cuanto más grande es el proyecto, más grande es el espagueti.

Es fácil ver que en equipos grandes o pequeños, uno no puede hacer imprudentemente lo que le plazca.</description>
    </item>
    
    <item>
      <title>Criptomonedas</title>
      <link>https://moonantonio.github.io/post/2017/utiles/014/</link>
      <pubDate>Tue, 24 Oct 2017 09:14:13 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/utiles/014/</guid>
      <description>Criptomonedas Introducción En 2008 un ciudadano de japon, que se hacia llamar &amp;ldquo;Satoshi Nakamoto&amp;rdquo; , compartio una idea que llamo la atencion de todos los usuarios.
Satoshi propuso una idea para crear una moneda digital. Una moneda basada en bits.
En la actualidad, cada persona necesita ingresar un dinero en una entidad bancaria, un dinero fisico, el cual es depositado digitalmente en nuestra cuenta. Por ese motivo dependemos de los bancos 100%, otro caso es la privazidad y la inflaccion, son problemas que actualmente tenemos en la sociedad actual con el sistema monetario actual.</description>
    </item>
    
    <item>
      <title>Buenas Practicas de programacion</title>
      <link>https://moonantonio.github.io/post/2017/utiles/013/</link>
      <pubDate>Mon, 16 Oct 2017 19:07:21 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/utiles/013/</guid>
      <description>Estoy seguro de que si te dedicas a programar, conoces a Robert &amp;ldquo;Uncle&amp;rdquo; Martin. Su libro Clean Code es uno de los más recomendados en la lista de libros que todo desarrollador debería leer. Martin, con sus cosas buenas y malas, es uno de los desarrolladores más influyentes del panorama ingenieril. Fuerte defensor de TDD, de la cobertura de tests y otras buenas prácticas, y además cuenta con muchas personas que siguen sus enseñanzas a rajatabla.</description>
    </item>
    
    <item>
      <title>Sistema Gambits</title>
      <link>https://moonantonio.github.io/post/2017/dev/013/</link>
      <pubDate>Tue, 03 Oct 2017 21:24:19 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/dev/013/</guid>
      <description>Descripción del S. Gambit. El sistema gambit, es un sistema que controla el comportamiento o acciones de un agente. Este agente tiene unas listas de prioridades en las que tiene comportamientos o acciones. El agente siempre accionara iteradamente su acción, siempre y cuando cumpla la condición, sino, pasara a la siguiente acción en la lista.
¿Dónde y por qué se necesitó crear el sistema gambit? En 1991, Square Soft, una desarrolladora de videojuegos famosa por sus sagas jrpg, necesitaba generar una serie de patrones para sus enemigos en su juego FF IV.</description>
    </item>
    
    <item>
      <title>RPG y Personajes de apoyo</title>
      <link>https://moonantonio.github.io/post/2017/juegos/004/</link>
      <pubDate>Wed, 27 Sep 2017 23:27:21 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/juegos/004/</guid>
      <description>Cuando gestionamos a un grupo en el género RPG, solemos darle prioridad a los personajes más fuertes o que más nos gustan para formar un equipo sólido que pueda afrentar los típicos combates del camino y las grandes batallas contra los jefes. Sin embargo, muchos títulos juegan con un factor puntual que rompe un poco nuestros esquemas: el de ofrecernos personajes que no se quedarán permanentemente con nosotros.
Seguramente se os vendrá a la mente algún RPG donde cierto personaje que os gustaba acababa marchándose del grupo, traicionándonos o incluso muriendo a lo largo de la historia del juego, lo que suele doler doblemente porque no sólo perdemos a un aliado, es que era uno que usábamos y al que, encima, le habíamos dedicado recursos como objetos de mejora de estadísticas, el equipo más caro o, simplemente, horas de entrenamiento que ya no nos servían para nada porque ese personaje no sigue con nosotros.</description>
    </item>
    
    <item>
      <title>Conceptos Generacion</title>
      <link>https://moonantonio.github.io/post/2017/dev/012/</link>
      <pubDate>Fri, 25 Aug 2017 22:40:40 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/dev/012/</guid>
      <description>Generacion de contenido procedural - Basico ¿Qué es el PCG? Aquí debo comenzar diciendo que en realidad una definición certera y aceptada por toda la academia no existe, es por eso que voy a mencionar diversas definiciones que obtuve de las referencias en las que me base:
 El PCG es la creación algorítmica de contenido de un juego, con entrada de información limitada o indirecta por parte del usuario.</description>
    </item>
    
    <item>
      <title>Atlus &amp; Europa</title>
      <link>https://moonantonio.github.io/post/2017/juegos/003/</link>
      <pubDate>Thu, 24 Aug 2017 21:07:09 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/juegos/003/</guid>
      <description>Atlus crea una división para lanzar sus propios títulos en Europa 
Desde Atlus han anunciado que de ahora en adelante se encargarán de publicar sus propios títulos en Europa desde una nueva oficina que han fundado en Londres. Anteriormente la compañía usaba terceras compañías como NIS America o Deep Silver para lanzar sus títulos en territorio europeo.
El nuevo equipo cuenta con Simon Inch como director comercial y en breve contará con su propio gestor de relaciones públicas y gerente de márketing.</description>
    </item>
    
    <item>
      <title>Comandos de consola Windows</title>
      <link>https://moonantonio.github.io/post/2017/dev/011/</link>
      <pubDate>Thu, 27 Jul 2017 19:35:28 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/dev/011/</guid>
      <description>Diferentes comandos utiles y basicos ##Cat
Cat (de concatenar), es una maravillosa utilidad que nos permite visualizar el contenido de un archivo de texto sin la necesidad de un editor. Para utilizarlo solo debemos mencionarlo junto al archivo que deseamos visualizar:
$ cat prueba.txt  ##Ls
Ls (de listar), permite listar el contenido de un directorio o fichero. La sintaxis es:
$ ls /home/directorio  El comando ls tiene varias opciones que permiten organizar la salida, lo que resulta particularmente útil cuando es muy grande.</description>
    </item>
    
    <item>
      <title>Maquina de estados Finitos</title>
      <link>https://moonantonio.github.io/post/2017/dev/010/</link>
      <pubDate>Wed, 05 Jul 2017 18:59:56 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/dev/010/</guid>
      <description>Las aplicaciones del sistema FSM en general y en videojuegos Se denomina máquina de estados a un modelo de comportamiento de un sistema con entradas y salidas, en donde las salidas dependen no sólo de las señales de entradas actuales sino también de las anteriores.
Finito, si el conjunto de estados de la máquina es finito, este es el único tipo de máquinas de estados que podemos modelar en un computador en la actualidad; debido a esto se suelen utilizar los términos máquina de estados y máquina de estados finitos de forma intercambiable.</description>
    </item>
    
    <item>
      <title>Pequeño proyecto manager escenas en memoria</title>
      <link>https://moonantonio.github.io/post/2017/dev/009/</link>
      <pubDate>Tue, 27 Jun 2017 13:55:04 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/dev/009/</guid>
      <description>Carga y descarga en memoria de escenas Despues de ver varios ejemplos de escenas, y ver la API de Unity3D para la carga y descarga de escenas en Unity3D, he desarrollado un pequeño ejemplo en modo de practica para poder experimentar la carga y descarga de niveles en escena.
El proyecto esta alojado en Github, y es open source, tiene las diferentes funciones -&amp;gt;
Carga y descarga de escenas Control de escenas vecinas Tiempo maximo de carga Posibilidad de agregar eventos en diferentes estados(Cargando, cargado)  Y algunas funcionalidades mas, junto con una muestra de ejemplo.</description>
    </item>
    
    <item>
      <title>Actualizacion GAIA</title>
      <link>https://moonantonio.github.io/post/2017/dev/008/</link>
      <pubDate>Sat, 10 Jun 2017 22:27:45 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/dev/008/</guid>
      <description>Actualizado nuevos modelos de Gaia He agregado nuevos modelos de mecanicas al repositorio de Gaia.
Blend Color 2048 
ShooterISO 
Cut 
Saltos 
.\Moon</description>
    </item>
    
    <item>
      <title>Effectos necesarios para el TFG</title>
      <link>https://moonantonio.github.io/post/2017/dev/007/</link>
      <pubDate>Tue, 06 Jun 2017 18:47:18 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/dev/007/</guid>
      <description>Investigacion de BaseMesh Unity3d El otro dia intentando crear efectos en la nueva GUI de Unity3D, vi que se puede modificar una malla de la uGUI, cogiendo sus vertices y añadiendolos a una lista, modificar los vertices de la lista a gusto.
Por aqui empece a desarrollar unos efectos que necesitaba para mi proyecto de TFG.
 El repositorio lo dejo en GitHub para que cualquiera que quiera usarlos o seguir desarrollando nuevos efectos, tenga acceso a ellos.</description>
    </item>
    
    <item>
      <title>Pintura Del Dia -20-05-2017-</title>
      <link>https://moonantonio.github.io/post/2017/imagen/007/</link>
      <pubDate>Sat, 20 May 2017 23:14:15 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/imagen/007/</guid>
      <description>Imagen del dia [20.05.2017] 
&amp;ldquo;La princesa con el plateado&amp;rdquo;.Danmachi.</description>
    </item>
    
    <item>
      <title>Open Source en Github</title>
      <link>https://moonantonio.github.io/post/2017/utiles/011/</link>
      <pubDate>Wed, 10 May 2017 12:29:53 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/utiles/011/</guid>
      <description>Github nos permite liberar cualquier proyecto en el que hayamos estado trabajado en privado. En ocasiones, nuestra intención es simplemente compartirlo sin más pretensiones como un pet project o como ejemplo de alguna kata que hemos estado preparado. Pero cuando queremos comenzar un proyecto Open Source un poco más serio, como una librería que queramos compartir con el resto de desarrolladores, quizás debamos pararnos a pensar un poco más antes de publicar nuestro código en Github si cumple una serie de pasos previos.</description>
    </item>
    
    <item>
      <title>Efectos de camara</title>
      <link>https://moonantonio.github.io/post/2017/diario/009/</link>
      <pubDate>Sat, 06 May 2017 03:19:13 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/diario/009/</guid>
      <description>Antes de nada, es precisa una customizacion rapida ya que Pros Proccesing Stack no esta integrado aun de forma natica en Unity.
Primero en la camara, activar HDR y desactivar MSA, por otro lado tambien poner defered para aumentar el realismo de la iluminacion.
Por ultimo en los ajustes de graficos, quitar el anti-aliasing que viene por defecto de unity.
Anti-Aliased Es un proceso de reduccion de los bordes dentados , con la que se añade una interpolacion para tratar de suavizar los bordes y dejarlos mas lisos.</description>
    </item>
    
    <item>
      <title>Pintura Del Dia -04-05-2017-</title>
      <link>https://moonantonio.github.io/post/2017/imagen/006/</link>
      <pubDate>Thu, 04 May 2017 18:12:24 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/imagen/006/</guid>
      <description> Imagen del dia [04.05.2017] 
&amp;ldquo;Lagrimas de princesa&amp;rdquo;.
 Sakimichan
 </description>
    </item>
    
    <item>
      <title>Investigacion RPG-Tactico</title>
      <link>https://moonantonio.github.io/post/2017/dev/005/</link>
      <pubDate>Wed, 26 Apr 2017 20:39:00 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/dev/005/</guid>
      <description>Investigacion RPG-Tactico ¿Qué se considera combate tactico? La definicion de combate, es aquella situación en la que dos o más personajes interactúan entre sí con el objetivo de reducir al otro. En sí mismo un combate no tiene por qué ser necesariamente la representación directa de un enfrentamiento físico, también puede ser una batalla dialéctica.
El concepto de turno de combate se puede definir como “sucesión de momentos en los que los personajes actúan, que pueden ser calculado de antemano y no dependen de factores externos o aleatorios que no estén incluidos dentro del propio combate”.</description>
    </item>
    
    <item>
      <title>Algoritmos de busqueda</title>
      <link>https://moonantonio.github.io/post/2017/programacion/006/</link>
      <pubDate>Sun, 23 Apr 2017 17:17:22 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/programacion/006/</guid>
      <description>Algoritmos de Busqueda A* Los algoritmos de búsqueda en grafos nacen por la necesidad de crear un mecanismo de navegación autónoma, bien sea de robots, coches, o personajes en un videojuego. Algunos de los más conocidos son A, LPA, o D*.
El algoritmo de búsqueda A* (pronunciado &amp;ldquo;A asterisco&amp;rdquo; o &amp;ldquo;A start&amp;rdquo;) se clasifica dentro de los algoritmos de búsqueda en grafos. El algoritmo A* encuentra, siempre y cuando se cumplan unas determinadas condiciones, el camino de menor coste entre un nodo origen y uno objetivo.</description>
    </item>
    
    <item>
      <title>Crear Steam backgrounds</title>
      <link>https://moonantonio.github.io/post/2017/utiles/010/</link>
      <pubDate>Mon, 10 Apr 2017 15:47:12 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/utiles/010/</guid>
      <description>¿Que son los Steam Backgrounds? Sólo escuchar las palabras &amp;ldquo;Background&amp;rdquo; sin ver lo que significa es muy confuso. En resumen, hace que la Muestra de ilustraciones y pantalla Escaparate transparente, que pueda ver el fondo que ha solicitado. En realidad, no hacen transparentes, no son más que la perfección las piezas recortadas de los antecedentes añadidos en el puesto. Aquí está un ejemplo de lo que se verá después de la finalización:</description>
    </item>
    
    <item>
      <title>¿Como subir Long Artworks a Steam?</title>
      <link>https://moonantonio.github.io/post/2017/utiles/009/</link>
      <pubDate>Mon, 10 Apr 2017 14:34:04 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/utiles/009/</guid>
      <description>Una guía sencilla para cargar long artworks con una altura tan grande como usted quiera! 
Para el Long Artworks https://steam.design/ puede hacer los Long Artworks ahora!
Simplemente haga clic en el botón en la parte superior derecha.

Cuidado Cualquier obra que cargue con este método ahora se extenderá hasta que la anchura es igual al tamaño de la web. Lo que significa que recomendamos que no suba gifs con un ancho menor de 506px.</description>
    </item>
    
    <item>
      <title>¿Como subir gifs al perfil de steam?</title>
      <link>https://moonantonio.github.io/post/2017/comun/015/</link>
      <pubDate>Sat, 08 Apr 2017 23:25:27 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/comun/015/</guid>
      <description>Subir un gif a modo de exposicion a Steam 
Introducción Los siguientes pasos explicarán cómo subir archivos GIF (y PNG) como las capturas de steam. Este es también el método más rápido y más fácil de subir capturas de pantalla personalizados.
Paso 1 
Abrir este link en un navegador y hacer clic derecho - inspeccionar elemento

Paso 2 
Ir a la consola y pegar el siguiente código:</description>
    </item>
    
    <item>
      <title>Neregate cierra sus puertas</title>
      <link>https://moonantonio.github.io/post/2017/comun/014/</link>
      <pubDate>Tue, 04 Apr 2017 23:04:52 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/comun/014/</guid>
      <description>Neregate cierra a medio mes Bueno pues aquí esta, neregate cierra, para los que no lo sepan, neregate a sido una web administrada por Zana, un usuario que monto desde 0 un blog que en principio estaba destinado a ser un pequeño sitio para publicar anime, cosas sobre programación y algún que otro log, pero que poco a poco en estos 7 años se ha convertido en una referencia para ver muchas cosas.</description>
    </item>
    
    <item>
      <title>Unity &#43; GeForce Share (Shadow Play)</title>
      <link>https://moonantonio.github.io/post/2017/dev/004/</link>
      <pubDate>Fri, 31 Mar 2017 00:32:33 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/dev/004/</guid>
      <description>De esta manera tus jugadores con tarjetas Nvidia podrán usar esta característica sin ningún problema.
GeForce Experience es una herramienta de las tarjetas Nvidia que permite gestionar tus juegos y optimizarlos, mantener los controladores actualizados y por supuesto la función “Share” que permite a los gamers compartir sus jugadas con los demás, esto es gracias a que la herramienta puede grabar nativamente una partida o bien una porción.
Quizás no lo hayas considerado pero esto es parte vital de la experiencia que tu juego debería brindarle a sus jugadores, y es posible que hayas compilado tu juego de manera que no sea compatible con esta característica, si no has configurado las siguientes opciones en Edit &amp;gt; Project Settings &amp;gt; Player.</description>
    </item>
    
    <item>
      <title>Mis Artistas 2D</title>
      <link>https://moonantonio.github.io/post/2017/comun/013/</link>
      <pubDate>Wed, 29 Mar 2017 14:43:04 +0200</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/comun/013/</guid>
      <description>Mis artistas favoritos de 2D  Desde hace 7 años sigo la trayectoria de varios artistas que han ido evolucionando y llegando a tener un arte que me agrada. Aquí recopilo los artistas que a dia de hoy son los que estoy siguiendo.</description>
    </item>
    
    <item>
      <title>Final Fantasy IX: Alternate Fantasy [Mod]</title>
      <link>https://moonantonio.github.io/post/2017/comun/012/</link>
      <pubDate>Thu, 23 Mar 2017 19:21:13 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/comun/012/</guid>
      <description>Final Fantasy IX: Alternate Fantasy es un mod que apunta a aumentar la dificultad y, sobre todo, a dar una nueva experiencia de FF9 para aquellos que ya conocen bien el juego.
Para la versión PSX, se instala mediante la aplicación de un parche PPF a los archivos de juego original. Puede utilizar la herramienta PPF-O-MATIC que se incluye en el archivo de mod.
Para la versión de Steam, reemplazas directamente algunos de los archivos del juego por los modificados.</description>
    </item>
    
    <item>
      <title>Imagen del dia [22.03.2017]</title>
      <link>https://moonantonio.github.io/post/2017/imagen/005/</link>
      <pubDate>Thu, 23 Mar 2017 04:58:48 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/imagen/005/</guid>
      <description>La noche agil y femenina es a su vez gentil pero peligrosa Artista desconocido</description>
    </item>
    
    <item>
      <title>Imagen del dia [22.03.2017]</title>
      <link>https://moonantonio.github.io/post/2017/imagen/004/</link>
      <pubDate>Wed, 22 Mar 2017 18:18:58 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/imagen/004/</guid>
      <description>Impactante pero cierto, solo con photoshop Kyrie</description>
    </item>
    
    <item>
      <title>TextMesh Pro Unity3D</title>
      <link>https://moonantonio.github.io/post/2017/dev/023/</link>
      <pubDate>Mon, 20 Mar 2017 16:00:38 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/dev/023/</guid>
      <description>TextMesh Pro se une a Unity.  Unity se complace en anunciar una nueva y poderosa adición a su suite de herramientas creativa: TextMesh Pro y su creador, Stephan Bouchard, se han unido a Unity!
 TextMesh Pro es un reemplazo de componentes de texto como texto de malla. TextMesh Pro utiliza SDF como su principal canal de renderizado de texto por lo que es posible representar el texto limpiamente en cualquier tamaño y resolución.</description>
    </item>
    
    <item>
      <title>Iluminación con Unity 5</title>
      <link>https://moonantonio.github.io/post/2017/comun/011/</link>
      <pubDate>Sat, 18 Mar 2017 18:59:13 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/comun/011/</guid>
      <description>Jeryce Dianingana compartió sus pensamientos sobre la construcción de escenas realistas mejoradas en Unity 5 con su nueva iluminación.

Poner a prueba la iluminación de Unity Siempre he querido reproducir una iluminación real desde un entorno real, así que probé en un primer momento para tomar la foto real en mi ciudad, apartamento, pero no soy un buen fotógrafo, así que fui a Pinterest, me encanta este sitio web, es uno de los mejores para mí para encontrar la referencia.</description>
    </item>
    
    <item>
      <title>El Código Bushido</title>
      <link>https://moonantonio.github.io/post/2017/comun/010/</link>
      <pubDate>Sat, 18 Mar 2017 18:36:29 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/comun/010/</guid>
      <description>Estos son los siete principios que rigen el código de Bushido. Estos principios basados en la filosofía a de Lao Tse y en los cuales se funda el primer emperador para la unificación china. Existe en china un lugar donde estas siete palabras están sostenidas en una serie de arcos consecutivos de tamaño considerable, bajo los cuales se pasa andando y que tienen su correspondiente leyenda.
Ser fieles a él y vuestro KI crecerá.</description>
    </item>
    
    <item>
      <title>Animando un personaje</title>
      <link>https://moonantonio.github.io/post/2017/comun/009/</link>
      <pubDate>Wed, 15 Mar 2017 17:27:52 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/comun/009/</guid>
      <description>Esta entrada la escribo para tener constancia del workflow que se hace en animación y nada mas.
Los pasos a seguir serian:
 Crear o buscar referencias. Puesta a punto de cámaras. Blocking con la malla justa del modelo animado. Generación de keys claves de la animación. Pulido final. VFX y preprocesado Render  Pero aquí solo pondre los puntos 1.3. y 5. Solo pondré esto ya que es muy tedioso y tendría que tener la entrada activa mucho tiempo.</description>
    </item>
    
    <item>
      <title>Gestor de Escenas en Unity3D</title>
      <link>https://moonantonio.github.io/post/2017/dev/022/</link>
      <pubDate>Wed, 15 Mar 2017 13:02:10 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/dev/022/</guid>
      <description>Evaluando lo necesario para el TFG, vi que requeríamos de un gestor de escenas, en la que se pudiera cambiar de escena, desde el editor y en runtime con variaciones.
 Editor -&amp;gt; cambiar generalmente de forma rápida y precisa.
Runtime -&amp;gt; cambiar entre cargar escena completa y cargar mediante Sync.
 Por ello propuse un Gestor de Escenas en la que uno mismo podría cambiar siempre de escena en cualquier lado.</description>
    </item>
    
    <item>
      <title>Organización en GitHub</title>
      <link>https://moonantonio.github.io/post/2017/comun/008/</link>
      <pubDate>Tue, 14 Mar 2017 19:53:02 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/comun/008/</guid>
      <description>Después de revisar mis repositorios en las diferentes plataformas(GitHub, GitLab, BitBucket), e visto que tengo un lio infernal, muchos proyectos desordenados, sin ningún patrón general para poder buscarlos, diferentes tags que a veces no son muy precisas &amp;hellip; y un largo x de cosas mejorables.
Por el momento me e interesado en crear en GitHub un repositorio para controlar los diferentes repos desde ahi, claro esta que las demás plataformas van para mucho tiempo, sin mas BitBucket es un pozo sin fondo de repos sin readme, sin descripción, 0 imágenes, 0 documentación &amp;hellip;</description>
    </item>
    
    <item>
      <title>Investigación sobre RPGs</title>
      <link>https://moonantonio.github.io/post/2017/comun/007/</link>
      <pubDate>Tue, 14 Mar 2017 01:49:51 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/comun/007/</guid>
      <description>Bueno, después de darle varias vueltas y buscar mucha información, por fin puedo redactar una investigación sobre los rpgs y sus puntos. Esto sera una compilación de 2 diferentes juegos que han tenido éxito y los puntos fuertes de cada juego, en su resumen (aunque no sea una investigación total), sera una linea por la que seguir y ver todas las referencias de los padres de estos 2 RPGs.</description>
    </item>
    
    <item>
      <title>Consejos para organizar tus proyectos</title>
      <link>https://moonantonio.github.io/post/2017/dev/003/</link>
      <pubDate>Mon, 13 Mar 2017 19:36:17 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/dev/003/</guid>
      <description>Vi a una persona en Quora, el otro día, preguntando cómo los programadores son capaces de escribir proyectos que constan de más de 10.000 líneas de código. Cuando el software se hace más grande, es más difícil de mantener y eso es un hecho. Así que aquí está la cosa - si usted no mantiene su proyecto organizado, vas a tener difícil mantener el ritmo. Más tarde, se encontrará perdiendo el tiempo con un proyecto desordenado en lugar de añadir nuevas características.</description>
    </item>
    
    <item>
      <title>Consejos para trabajar en equipo</title>
      <link>https://moonantonio.github.io/post/2017/dev/002/</link>
      <pubDate>Mon, 13 Mar 2017 19:10:22 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/dev/002/</guid>
      <description>Ya sea que esté trabajando en un equipo o en solitario, usted debe saber cómo trabajar de manera eficiente en un proyecto con otras personas. No sólo va a hacer que el trabajo en un solo proyecto con alguien mucho sea más fácil, sino también mejorar su estilo de codificación y las habilidades de gestión de proyectos de manera significativa. No tiene que temer a nada, de verdad! Me gustaría explicar en unos pocos pasos cuáles son los aspectos más importantes del trabajo en equipo.</description>
    </item>
    
    <item>
      <title>Imagen del dia [12.03.2017]</title>
      <link>https://moonantonio.github.io/post/2017/imagen/003/</link>
      <pubDate>Sun, 12 Mar 2017 23:50:54 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/imagen/003/</guid>
      <description>^^ Artista desconocido</description>
    </item>
    
    <item>
      <title>Oficios de Bravely Default</title>
      <link>https://moonantonio.github.io/post/2017/comun/006/</link>
      <pubDate>Thu, 09 Mar 2017 22:27:20 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/comun/006/</guid>
      <description>Esta entrada muestra información sobre el videojuego Bravely Default. El videojuego se ambienta en el mundo de Luxendrac, que se mantiene en equilibrio gracias a los 4 cristales elementales protegidos por la religión de &amp;lsquo;Crystal Orthodoxy&amp;rsquo;, un grupo que tiene influencias alrededor del mundo.
OFICIOS
 FREELANCER     El Freelancer es un trabajo equilibrado en general con un dominio medio en todas las estadísticas y tipos de equipos.</description>
    </item>
    
    <item>
      <title>Bakeo simple en Unity3D</title>
      <link>https://moonantonio.github.io/post/2017/dev/021/</link>
      <pubDate>Thu, 09 Mar 2017 22:24:10 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/dev/021/</guid>
      <description>Primero preparamos la escena, con colores planos (simples) y algún objeto para representar en la escena, como una esfera.

Luego configuramos la iluminación para el quemado. Lo mas importante seria quitar el bakeo y seleccionar en tiempo real para preparar la escena entera.

Añadimos una pequeña animación para el movimiento de la luz direccional para ver en tiempo real el movimiento y si esta bien configurado.
public float v = 5; private void Update(){ this.</description>
    </item>
    
    <item>
      <title>MTodo Tool</title>
      <link>https://moonantonio.github.io/post/2017/dev/020/</link>
      <pubDate>Thu, 09 Mar 2017 21:54:00 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/dev/020/</guid>
      <description>MTodo Tool es una herramienta sencilla para hacer un seguimiento del código en Unity3D
MTodo analiza la sintaxis de tu código con categorías / etiquetas. Por ejemplo, supongamos que tienes una categoría de BUG, en la linea de tu código donde se encuentra ese bug, pondría :
// &amp;lt; Categoria &amp;gt; &amp;lt; Mensaje &amp;gt; // BUG Aquí hay un bug.  MTodo analizara todas las lineas de tu solución y recopilara todas las etiquetas que tengan una concordancia con las categorías que se estipulen dentro de la herramienta, dando un sitio central donde se concentra toda la información encontrada.</description>
    </item>
    
    <item>
      <title>MDevScripts</title>
      <link>https://moonantonio.github.io/post/2017/dev/019/</link>
      <pubDate>Thu, 09 Mar 2017 21:50:01 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/dev/019/</guid>
      <description>¿Por que publicar algo tan sencillo? Bueno, simplemente para poder hacer rápidamente funcionalidades sin tener que crear scripts nuevos y sin tener que arbitrar entre la solución mas optima, ya que en un prototipado lo que primero se hace es volver a crear los scripts básicos.
Por ello uso estos scripts, que hacen que por ejemplo el environment se cree rápidamente y asi concentrarme en la mecánica que en si es la que mas trabajo lleva de un prototipo.</description>
    </item>
    
    <item>
      <title>Bravely</title>
      <link>https://moonantonio.github.io/post/2017/comun/005/</link>
      <pubDate>Wed, 08 Mar 2017 23:47:13 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/comun/005/</guid>
      <description>La franquicia Bravely celebra su 4º aniversario insinuando posibles novedades Hoy es 11 de octubre, día que marca el cuarto aniversario de la franquicia Bravely. La cuenta oficial de Twitter de la misma ha lanzado un tweet con una ilustración para conmemorar la ocasión y ha dejado caer que pronto podría haber novedades.
 El tweet reza: “¡Es el cuarto aniversario de Bravely! Sentimos la reciente falta de noticias. ¡¿Habrá novedades pronto…?</description>
    </item>
    
    <item>
      <title>Mecánicas TFG - Investigación</title>
      <link>https://moonantonio.github.io/post/2017/comun/004/</link>
      <pubDate>Sun, 05 Mar 2017 23:39:48 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/comun/004/</guid>
      <description>Mecánicas presentadas para el TFG Al comienzo de la investigación, se propuso unas mecánicas Hack &amp;amp; Slash estilo Devil May Cry, en base a ellas, vimos varias propuestas y redactamos lo que serian los cimientos de las mecánicas &amp;amp; algunas funcionalidades previstas:
Accionar y combinar combos, entre 4 estilos de lucha:  Ataque fuerte. Ataque rápido. Ataque a distancia. Salto / Salto doble.  También extras como:  Esquive. Bloqueo.</description>
    </item>
    
    <item>
      <title>Unity3D Carga de nivel [Logo]</title>
      <link>https://moonantonio.github.io/post/2017/dev/018/</link>
      <pubDate>Sat, 04 Mar 2017 23:23:58 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/dev/018/</guid>
      <description>Escena de carga en Unity3D con varios ejemplos. Se puede usar plugins como NGUI o si lo prefieres el mismo UGUI incorporado en Unity 5+. Esta version esta probada para Unity3D 5.5.1p4.
El planteamiento es que el logo siguiente, hiciera un fade-in y un fade-out en un tiempo. Es decir una transición hacia dentro y otra hacia afuera como se ve en el siguiente ejemplo. El repositorio de ejemplo lo tenéis al final de la entrada.</description>
    </item>
    
    <item>
      <title>Imagen del dia [03.03.2017]</title>
      <link>https://moonantonio.github.io/post/2017/imagen/002/</link>
      <pubDate>Thu, 02 Mar 2017 22:42:52 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/imagen/002/</guid>
      <description>Cazadora pelirroja con su lobo ^^ Mu si</description>
    </item>
    
    <item>
      <title>Imagen del dia [02.03.2017]</title>
      <link>https://moonantonio.github.io/post/2017/imagen/001/</link>
      <pubDate>Thu, 02 Mar 2017 19:28:34 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/imagen/001/</guid>
      <description>Samus metroid, épica ^^ Artista desconocido</description>
    </item>
    
    <item>
      <title>The Alliance Alive</title>
      <link>https://moonantonio.github.io/post/2017/comun/002/</link>
      <pubDate>Thu, 02 Mar 2017 18:44:00 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/comun/002/</guid>
      <description>The Alliance Alive FuRyu ha liberado el primer tráiler y dado más detalles de The Alliance Alive, su nuevo RPG para Nintendo 3DS desarrollado por Cattle Call (Legend of Legacy) y que cuenta con historia de Yoshitaka Murayama, creador de Suikoden.
La historia
Hace miles de años, el mundo habitado por los humanos fue invadido por los Asmodias. Los Asmodians invadieron el mundo para tomar el control de la “Energía del Caos”, algo que amenaza su propio mundo, se convirtieron en gobernantes y pusieron una “gran barrera” al planeta.</description>
    </item>
    
    <item>
      <title>Investigación Monomito</title>
      <link>https://moonantonio.github.io/post/2017/dev/001/</link>
      <pubDate>Wed, 01 Mar 2017 23:38:17 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/dev/001/</guid>
      <description>¿Que es monomito? Según esta teoría, todas y cada una de las grandes historias siguen un patrón que se divide en 12 pasos, cada uno de ellos con unas características diferentes y que varían de una historia a otra y también de una época a otra. No todas las etapas del Viaje del héroe son siempre invariables ni todos los personajes son siempre los mismos o del mismo tipo, pero sí hay ciertos elementos que son siempre constantes de una historia a otra.</description>
    </item>
    
    <item>
      <title>MEGA API CLIENT [C#]</title>
      <link>https://moonantonio.github.io/post/2017/dev/017/</link>
      <pubDate>Wed, 01 Mar 2017 23:32:52 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/dev/017/</guid>
      <description>(ACTUALIZADO A 21/07/2022)
Mega es el sucesor del servicio de archivos en la nube Megaupload, para aquellos a los que no les suena ninguno de los dos es como un dropbox, un servicio gratuito o de pago dependiendo del espacio que utilizamos para poder subir nuestros archivos. En mi opinión es un servicio increíble que nos permite almacenar copias de seguridad de archivos en la nube y/o compartirlos.
En esta entrada mostraré como desde un proyecto en .</description>
    </item>
    
    <item>
      <title>The Witch and the Hundred Knight 2</title>
      <link>https://moonantonio.github.io/post/2017/comun/001/</link>
      <pubDate>Wed, 01 Mar 2017 23:28:47 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/comun/001/</guid>
      <description>Anunciado The Witch and the Hundred Knight 2 para PlayStation 4  El último número de la revista Famitsu revela que The Witch and the Hundred Knight 2 se lanzará en invierno de 2017 en las PlayStation 4 japonesas.
El juego contará una nueva historia en un mundo diferente al de la primera entrega. En esta ocasión el tema será “brujas” y “enfermedad”, tomando los jugadores el rol del Hundred Knight (voz de Kaoru Mizuhara), invocado por la bruja Cerca para combatir bajo sus órdenes.</description>
    </item>
    
    <item>
      <title>Explicación IA básica</title>
      <link>https://moonantonio.github.io/post/2017/dev/015/</link>
      <pubDate>Wed, 01 Mar 2017 23:25:12 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/dev/015/</guid>
      <description>IA en Videojuegos Hay diferentes tipos de IA clasificados por el tipo de uso de su algoritmo.
Los mas comunes en videojuegos son:
 Juegos de suma cero: Minimax Búsqueda de caminos: A* Agentes inteligentes Maquina de estados finitos Redes neuronales Algoritmos genéticos Redes evolutivas: rtNeat  Juegos de suma cero son juegos en los que solo tienen 2 resultados, o 3. Como por ejemplo el ajedrez, Minimax es un algoritmo para realizar la elección de la mejor acción para ganar.</description>
    </item>
    
    <item>
      <title>Comandos fundamentales de GIT</title>
      <link>https://moonantonio.github.io/post/2017/dev/016/</link>
      <pubDate>Wed, 01 Mar 2017 23:20:28 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/dev/016/</guid>
      <description>Los comandos fundamentales que se usan en git. Los comandos fundamentales que se usan en git son muchos, pero dependiendo del tipo de control de versiones que uno esta realizando en ese momento.
Por ejemplo si estas haciendo un control de versiones de un proyecto en el que solo participas tu, usaras los indispensables ya que con dejar el proyecto abierto para que otros puedas entrar sin problemas de cambiar la config sobra.</description>
    </item>
    
    <item>
      <title>[PROTOTIPO][#12] Mini Demo Interna</title>
      <link>https://moonantonio.github.io/post/2017/devblog/001/</link>
      <pubDate>Fri, 06 Jan 2017 01:07:54 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2017/devblog/001/</guid>
      <description>BLOQUEADO</description>
    </item>
    
    <item>
      <title>[PROTOTIPO][#11] Test</title>
      <link>https://moonantonio.github.io/post/2016/devblog/011/</link>
      <pubDate>Fri, 30 Dec 2016 01:06:23 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2016/devblog/011/</guid>
      <description>BLOQUEADO</description>
    </item>
    
    <item>
      <title>[PROTOTIPO][#10] Cid</title>
      <link>https://moonantonio.github.io/post/2016/devblog/010/</link>
      <pubDate>Fri, 23 Dec 2016 01:05:26 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2016/devblog/010/</guid>
      <description>BLOQUEADO</description>
    </item>
    
    <item>
      <title>[PROTOTIPO][#9] Acampada</title>
      <link>https://moonantonio.github.io/post/2016/devblog/009/</link>
      <pubDate>Fri, 16 Dec 2016 01:04:08 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2016/devblog/009/</guid>
      <description>BLOQUEADO</description>
    </item>
    
    <item>
      <title>[PROTOTIPO][#8] IA</title>
      <link>https://moonantonio.github.io/post/2016/devblog/008/</link>
      <pubDate>Fri, 09 Dec 2016 01:03:01 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2016/devblog/008/</guid>
      <description>BLOQUEADO</description>
    </item>
    
    <item>
      <title>[PROTOTIPO][#7] Ciclos</title>
      <link>https://moonantonio.github.io/post/2016/devblog/007/</link>
      <pubDate>Fri, 02 Dec 2016 01:00:10 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2016/devblog/007/</guid>
      <description>BLOQUEADO</description>
    </item>
    
    <item>
      <title>[PROTOTIPO][#6] Unidades</title>
      <link>https://moonantonio.github.io/post/2016/devblog/006/</link>
      <pubDate>Fri, 25 Nov 2016 00:58:38 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2016/devblog/006/</guid>
      <description>BLOQUEADO</description>
    </item>
    
    <item>
      <title>[PROTOTIPO][#5] Combate</title>
      <link>https://moonantonio.github.io/post/2016/devblog/005/</link>
      <pubDate>Fri, 18 Nov 2016 00:57:25 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2016/devblog/005/</guid>
      <description>BLOQUEADO</description>
    </item>
    
    <item>
      <title>[PROTOTIPO][#4] Interacciones</title>
      <link>https://moonantonio.github.io/post/2016/devblog/004/</link>
      <pubDate>Fri, 11 Nov 2016 00:56:04 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2016/devblog/004/</guid>
      <description>BLOQUEADO</description>
    </item>
    
    <item>
      <title>[PROTOTIPO][#3] Personaje</title>
      <link>https://moonantonio.github.io/post/2016/devblog/003/</link>
      <pubDate>Fri, 04 Nov 2016 00:54:25 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2016/devblog/003/</guid>
      <description>BLOQUEADO</description>
    </item>
    
    <item>
      <title>[PROTOTIPO][#2] Menú Principal</title>
      <link>https://moonantonio.github.io/post/2016/devblog/002/</link>
      <pubDate>Fri, 28 Oct 2016 00:52:58 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2016/devblog/002/</guid>
      <description>BLOQUEADO</description>
    </item>
    
    <item>
      <title>[PROTOTIPO][#1] Comienzo</title>
      <link>https://moonantonio.github.io/post/2016/devblog/001/</link>
      <pubDate>Fri, 21 Oct 2016 00:47:40 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2016/devblog/001/</guid>
      <description>BLOQUEADO</description>
    </item>
    
    <item>
      <title>Introducción</title>
      <link>https://moonantonio.github.io/post/2016/comun/001/</link>
      <pubDate>Fri, 14 Oct 2016 23:43:11 +0100</pubDate>
      
      <guid>https://moonantonio.github.io/post/2016/comun/001/</guid>
      <description>Antes de nada, explicare por que de esta entrada. Después explicare un poco en que consisten estos nuevos cambios y mi motivación. Por ultimo desarrollare una solución de seguimiento de devblog.
DevBlog Un proyecto que tenia en mente desde hace bastante tiempo, pero que por falta de tiempo y conocimientos no podía empezar. Lamentablemente sigo sin tiempo, pero si que ya llevo unos años estudiando en un campo más técnico y por lo tanto, tengo conocimientos para poder iniciar a desarrollar este proyecto.</description>
    </item>
    
  </channel>
</rss>